.TH "BBP::std::ELF::SegmentBuilder" 3 "Fri Jan 26 2024" "Version 0.2.0" "BBP Embedded kernel" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BBP::std::ELF::SegmentBuilder
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ELF\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBAppend\fP (\fBstd::size_t\fP dataSize)"
.br
.ti -1c
.RI "\fBstd::word\fP \fBtype\fP (void)"
.br
.ti -1c
.RI "void \fBtype\fP (\fBstd::word\fP)"
.br
.ti -1c
.RI "\fBstd::offset_t\fP \fBoffset\fP (void)"
.br
.ti -1c
.RI "void \fBoffset\fP (\fBstd::offset_t\fP)"
.br
.ti -1c
.RI "\fBstd::address_t\fP \fBvaddr\fP (void)"
.br
.ti -1c
.RI "void \fBvaddr\fP (\fBstd::address_t\fP)"
.br
.ti -1c
.RI "\fBstd::address_t\fP \fBpaddr\fP (void)"
.br
.ti -1c
.RI "void \fBpaddr\fP (\fBstd::address_t\fP)"
.br
.ti -1c
.RI "\fBstd::word\fP \fBfilesz\fP (void)"
.br
.ti -1c
.RI "void \fBfilesz\fP (\fBstd::word\fP)"
.br
.ti -1c
.RI "\fBstd::word\fP \fBmemsz\fP (void)"
.br
.ti -1c
.RI "void \fBmemsz\fP (\fBstd::word\fP)"
.br
.ti -1c
.RI "\fBstd::word\fP \fBflags\fP (void)"
.br
.ti -1c
.RI "void \fBflags\fP (\fBstd::word\fP)"
.br
.ti -1c
.RI "\fBstd::word\fP \fBalign\fP (void)"
.br
.ti -1c
.RI "void \fBalign\fP (\fBstd::word\fP)"
.br
.ti -1c
.RI "void \fBclose\fP ()"
.br
.ti -1c
.RI "\fBSegmentBuilder\fP (\fBELFBuilder\fP *, \fBstd::offset_t\fP)"
.br
.ti -1c
.RI "\fBSegmentBuilder\fP (\fBELFBuilder\fP *, \fBstring_element\fP *, \fBstd::size_t\fP)"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "\fBPAGE\fP< \fBstring_element\fP > \fBheader\fP"
.br
.ti -1c
.RI "\fBStack\fP< \fBstring_element\fP > \fBstack\fP"
.br
.ti -1c
.RI "\fBPAGE\fP< \fBstring_element\fP > \fBdata\fP"
.br
.ti -1c
.RI "\fBELFBuilder\fP * \fBelf\fP"
.br
.ti -1c
.RI "bool \fBisMemUnique\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 258 of file ELF\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "BBP::std::ELF::SegmentBuilder::SegmentBuilder (\fBELFBuilder\fP * elf, \fBstd::offset_t\fP offset)"

.PP
Definition at line 37 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
38     : header(PAGE<string_element>(ELF_SEGMENT_HEADERSIZE, elf->file\&.data + offset)),
39     stack(&data, 0),
40     data(PAGE<string_element>()),
41     elf(elf),
42     isMemUnique(false) {}
.fi
.SS "BBP::std::ELF::SegmentBuilder::SegmentBuilder (\fBELFBuilder\fP *, \fBstring_element\fP *, \fBstd::size_t\fP)"

.SH "Member Function Documentation"
.PP 
.SS "void BBP::std::ELF::SegmentBuilder::align (\fBstd::word\fP value)"

.PP
Definition at line 66 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
66 { writeWord(this, value, ELF_SEGMENT_ALIGNOFFSET); }
.fi
.PP
References ELF_SEGMENT_ALIGNOFFSET, and writeWord()\&.
.SS "\fBBBP::std::word\fP BBP::std::ELF::SegmentBuilder::align (void)"

.PP
Definition at line 65 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
65 { return readWord(this, ELF_SEGMENT_ALIGNOFFSET); }
.fi
.PP
References ELF_SEGMENT_ALIGNOFFSET, and readWord()\&.
.SS "void BBP::std::ELF::SegmentBuilder::Append (\fBstd::size_t\fP dataSize)"

.PP
Definition at line 4 of file SegmentBuilder\&.cpp\&.
.PP
.nf
5 {
6     // If builder is null, signal SIGSEV
7     if (elf == nullptr)
8     {
9         __SIGNAL__(SIGSEGV);
10     }
11 
12     // Get current length of elf page
13     std::size_t currentLength = std::seqlen(elf->file);
14 
15     // Save offset and size to header
16     offset(currentLength);
17     filesz(size);
18     memsz(size);
19 
20     // Now create a new page
21     data = std::string(size, (std::string_element *)elf->allocator->calloc(size, sizeof(std::string_element)));
22     isMemUnique = true;
23 
24     // Then set the stack to that page
25     stack = std::Stack<string_element>(&data, size);
26 
27     // Then append the data
28     std::last(elf->file)\&.nextPage = &data;
29 }
.fi
.PP
References __SIGNAL__, BBP::std::ELF::ELFBuilder::allocator, BBP::std::ResourceManager::calloc(), data, elf, BBP::std::ELF::ELFBuilder::file, filesz(), isMemUnique, BBP::std::last(), memsz(), offset(), BBP::std::seqlen(), BBP::std::SIGSEGV, and stack\&.
.SS "void BBP::std::ELF::SegmentBuilder::close ()"

.PP
Definition at line 31 of file SegmentBuilder\&.cpp\&.
.PP
.nf
32 {
33     // If builder is null, signal SIGSEV
34     if (elf == nullptr)
35     {
36         __SIGNAL__(SIGSEGV);
37     }
38 
39     // If mem is unique, free it\&.
40     if (isMemUnique)
41         elf->allocator->free(data\&.data);
42 }
.fi
.PP
References __SIGNAL__, and BBP::std::SIGSEGV\&.
.PP
Referenced by BBP::std::ELF::ELFBuilder::close()\&.
.SS "void BBP::std::ELF::SegmentBuilder::filesz (\fBstd::word\fP value)"

.PP
Definition at line 60 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
60 { writeWord(this, value, ELF_SEGMENT_FILESZOFFSET); }
.fi
.PP
References ELF_SEGMENT_FILESZOFFSET, and writeWord()\&.
.SS "\fBBBP::std::word\fP BBP::std::ELF::SegmentBuilder::filesz (void)"

.PP
Definition at line 59 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
59 { return readWord(this, ELF_SEGMENT_FILESZOFFSET); }
.fi
.PP
References ELF_SEGMENT_FILESZOFFSET, and readWord()\&.
.PP
Referenced by Append()\&.
.SS "void BBP::std::ELF::SegmentBuilder::flags (\fBstd::word\fP value)"

.PP
Definition at line 48 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
48 { writeWord(this, value, ELF_SEGMENT_FLAGSOFFSET); }
.fi
.PP
References ELF_SEGMENT_FLAGSOFFSET, and writeWord()\&.
.SS "\fBBBP::std::word\fP BBP::std::ELF::SegmentBuilder::flags (void)"

.PP
Definition at line 47 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
47 { return readWord(this, ELF_SEGMENT_FLAGSOFFSET); }
.fi
.PP
References ELF_SEGMENT_FLAGSOFFSET, and readWord()\&.
.SS "void BBP::std::ELF::SegmentBuilder::memsz (\fBstd::word\fP value)"

.PP
Definition at line 63 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
63 { writeWord(this, value, ELF_SEGMENT_MEMSZOFFSET); }
.fi
.PP
References ELF_SEGMENT_MEMSZOFFSET, and writeWord()\&.
.SS "\fBBBP::std::word\fP BBP::std::ELF::SegmentBuilder::memsz (void)"

.PP
Definition at line 62 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
62 { return readWord(this, ELF_SEGMENT_MEMSZOFFSET); }
.fi
.PP
References ELF_SEGMENT_MEMSZOFFSET, and readWord()\&.
.PP
Referenced by Append()\&.
.SS "void BBP::std::ELF::SegmentBuilder::offset (\fBstd::offset_t\fP value)"

.PP
Definition at line 51 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
51 { writeWord(this, value, ELF_SEGMENT_OFFSETOFFSET); }
.fi
.PP
References ELF_SEGMENT_OFFSETOFFSET, and writeWord()\&.
.SS "\fBBBP::std::offset_t\fP BBP::std::ELF::SegmentBuilder::offset (void)"

.PP
Definition at line 50 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
50 { return readWord(this, ELF_SEGMENT_OFFSETOFFSET); }
.fi
.PP
References ELF_SEGMENT_OFFSETOFFSET, and readWord()\&.
.PP
Referenced by Append()\&.
.SS "void BBP::std::ELF::SegmentBuilder::paddr (\fBstd::address_t\fP value)"

.PP
Definition at line 57 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
57 { writeWord(this, value, ELF_SEGMENT_PADDROFFSET); }
.fi
.PP
References ELF_SEGMENT_PADDROFFSET, and writeWord()\&.
.SS "\fBBBP::std::address_t\fP BBP::std::ELF::SegmentBuilder::paddr (void)"

.PP
Definition at line 56 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
56 { return readWord(this, ELF_SEGMENT_PADDROFFSET); }
.fi
.PP
References ELF_SEGMENT_PADDROFFSET, and readWord()\&.
.SS "void BBP::std::ELF::SegmentBuilder::type (\fBstd::word\fP value)"

.PP
Definition at line 45 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
45 { writeWord(this, value, ELF_SEGMENT_TYPEOFFSET); }
.fi
.PP
References ELF_SEGMENT_TYPEOFFSET, and writeWord()\&.
.SS "\fBBBP::std::word\fP BBP::std::ELF::SegmentBuilder::type (void)"

.PP
Definition at line 44 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
44 { return readWord(this, ELF_SEGMENT_TYPEOFFSET); }
.fi
.PP
References ELF_SEGMENT_TYPEOFFSET, and readWord()\&.
.SS "void BBP::std::ELF::SegmentBuilder::vaddr (\fBstd::address_t\fP value)"

.PP
Definition at line 54 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
54 { writeWord(this, value, ELF_SEGMENT_VADDROFFSET); }
.fi
.PP
References ELF_SEGMENT_VADDROFFSET, and writeWord()\&.
.SS "\fBBBP::std::address_t\fP BBP::std::ELF::SegmentBuilder::vaddr (void)"

.PP
Definition at line 53 of file SegmentBuilderGettersSetters\&.cpp\&.
.PP
.nf
53 { return readWord(this, ELF_SEGMENT_VADDROFFSET); }
.fi
.PP
References ELF_SEGMENT_VADDROFFSET, and readWord()\&.
.SH "Field Documentation"
.PP 
.SS "\fBPAGE\fP<\fBstring_element\fP> BBP::std::ELF::SegmentBuilder::data"

.PP
Definition at line 290 of file ELF\&.h\&.
.PP
Referenced by Append()\&.
.SS "\fBELFBuilder\fP* BBP::std::ELF::SegmentBuilder::elf"

.PP
Definition at line 295 of file ELF\&.h\&.
.PP
Referenced by Append(), readWord(), and writeWord()\&.
.SS "\fBPAGE\fP<\fBstring_element\fP> BBP::std::ELF::SegmentBuilder::header"

.PP
Definition at line 288 of file ELF\&.h\&.
.PP
Referenced by readWord(), and writeWord()\&.
.SS "bool BBP::std::ELF::SegmentBuilder::isMemUnique"

.PP
Definition at line 297 of file ELF\&.h\&.
.PP
Referenced by Append()\&.
.SS "\fBStack\fP<\fBstring_element\fP> BBP::std::ELF::SegmentBuilder::stack"

.PP
Definition at line 289 of file ELF\&.h\&.
.PP
Referenced by Append()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for BBP Embedded kernel from the source code\&.
