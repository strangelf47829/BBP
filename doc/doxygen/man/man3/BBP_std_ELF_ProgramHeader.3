.TH "BBP::std::ELF::ProgramHeader" 3 "Fri Jan 26 2024" "Version 0.2.0" "BBP Embedded kernel" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BBP::std::ELF::ProgramHeader
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ELF32\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "\fBstd::word\fP \fBtype\fP = 0"
.br
.RI "The type of this program header\&. See P_TYPE\&. "
.ti -1c
.RI "\fBstd::offset_t\fP \fBoffset\fP = 0"
.br
.RI "Specifies where the contents of this header is in the file (relative to File start) "
.ti -1c
.RI "\fBstd::address_t\fP \fBvaddr\fP = 0"
.br
.RI "Where in virtual memory this segment should be loaded\&. "
.ti -1c
.RI "\fBstd::address_t\fP \fBpaddr\fP = 0"
.br
.RI "Where in physical memory this segment should be loaded\&. "
.ti -1c
.RI "\fBstd::word\fP \fBfilesz\fP = 0"
.br
.RI "Size of the segment in the file\&. If 0, the segment is defined exclusively by the header\&. "
.ti -1c
.RI "\fBstd::word\fP \fBmemsz\fP = 0"
.br
.RI "Size of the segment in memory\&. If greater than the size in file, the extra bytes will be initialized as 0\&. "
.ti -1c
.RI "\fBstd::word\fP \fBflags\fP = 0"
.br
.RI "Flags\&. PF_X - \fBExecutable\fP, PF_W - Writeable, PF_R - Readable\&. "
.ti -1c
.RI "\fBstd::word\fP \fBalign\fP = 0"
.br
.RI "0x1000 "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 182 of file ELF32\&.h\&.
.SH "Field Documentation"
.PP 
.SS "\fBstd::word\fP BBP::std::ELF::ProgramHeader::align = 0"

.PP
0x1000 
.PP
Definition at line 190 of file ELF32\&.h\&.
.SS "\fBstd::word\fP BBP::std::ELF::ProgramHeader::filesz = 0"

.PP
Size of the segment in the file\&. If 0, the segment is defined exclusively by the header\&. 
.PP
Definition at line 187 of file ELF32\&.h\&.
.SS "\fBstd::word\fP BBP::std::ELF::ProgramHeader::flags = 0"

.PP
Flags\&. PF_X - \fBExecutable\fP, PF_W - Writeable, PF_R - Readable\&. 
.PP
Definition at line 189 of file ELF32\&.h\&.
.SS "\fBstd::word\fP BBP::std::ELF::ProgramHeader::memsz = 0"

.PP
Size of the segment in memory\&. If greater than the size in file, the extra bytes will be initialized as 0\&. 
.PP
Definition at line 188 of file ELF32\&.h\&.
.SS "\fBstd::offset_t\fP BBP::std::ELF::ProgramHeader::offset = 0"

.PP
Specifies where the contents of this header is in the file (relative to File start) 
.PP
Definition at line 184 of file ELF32\&.h\&.
.SS "\fBstd::address_t\fP BBP::std::ELF::ProgramHeader::paddr = 0"

.PP
Where in physical memory this segment should be loaded\&. 
.PP
Definition at line 186 of file ELF32\&.h\&.
.SS "\fBstd::word\fP BBP::std::ELF::ProgramHeader::type = 0"

.PP
The type of this program header\&. See P_TYPE\&. 
.PP
Definition at line 183 of file ELF32\&.h\&.
.SS "\fBstd::address_t\fP BBP::std::ELF::ProgramHeader::vaddr = 0"

.PP
Where in virtual memory this segment should be loaded\&. 
.PP
Definition at line 185 of file ELF32\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for BBP Embedded kernel from the source code\&.
