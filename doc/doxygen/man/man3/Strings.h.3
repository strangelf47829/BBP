.TH "Strings.h" 3 "Fri Jan 26 2024" "Version 0.2.0" "BBP Embedded kernel" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Strings.h
.SH SYNOPSIS
.br
.PP
\fC#include 'Memory\&.h'\fP
.br
\fC#include 'Stack\&.h'\fP
.br
\fC#include 'Resources\&.h'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBBBP\fP"
.br
.ti -1c
.RI " \fBBBP::std\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef char \fBBBP::std::string_element\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBBBP::std::ustring_element\fP"
.br
.ti -1c
.RI "typedef PAGE< string_element > \fBBBP::std::string\fP"
.br
.ti -1c
.RI "template<int N> using \fBBBP::std::static_string\fP = STATIC_PAGE< string_element, N >"
.br
.ti -1c
.RI "typedef string_element * \fBBBP::std::c_string\fP"
.br
.ti -1c
.RI "typedef ustring_element * \fBBBP::std::uc_string\fP"
.br
.ti -1c
.RI "typedef uint32_t \fBBBP::std::hash_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBBBP::std::strcpy\fP (string *dst, conststring src)"
.br
.ti -1c
.RI "void \fBBBP::std::operator<=\fP (string &dst, conststring src)"
.br
.ti -1c
.RI "void \fBBBP::std::strcpy\fP (string *dst, c_string src)"
.br
.ti -1c
.RI "void \fBBBP::std::operator<=\fP (string &dst, c_string src)"
.br
.ti -1c
.RI "void \fBBBP::std::strcpy\fP (c_string dst, conststring src)"
.br
.ti -1c
.RI "bool \fBBBP::std::strcmp\fP (string *sta, conststring stb)"
.br
.ti -1c
.RI "bool \fBBBP::std::strcmp\fP (string *sta, c_string stb)"
.br
.ti -1c
.RI "size_t \fBBBP::std::strlen\fP (conststring str)"
.br
.ti -1c
.RI "size_t \fBBBP::std::strlen\fP (c_string str)"
.br
.ti -1c
.RI "size_t \fBBBP::std::strlen\fP (string &str)"
.br
.ti -1c
.RI "size_t \fBBBP::std::strlen\fP (string str, offset_t offset)"
.br
.ti -1c
.RI "hash_t \fBBBP::std::strhsh\fP (string &str)"
.br
.ti -1c
.RI "hash_t \fBBBP::std::strhsh\fP (c_string str)"
.br
.ti -1c
.RI "hash_t \fBBBP::std::strhsh\fP (conststring str)"
.br
.ti -1c
.RI "constexpr std::hash_t \fBBBP::std::operator''_hash\fP (const char *str, long unsigned int hehe)"
.br
.ti -1c
.RI "void \fBBBP::std::strhsh\fP (hash_t &, word &, string_element &)"
.br
.ti -1c
.RI "size_t \fB__UNSAFE__\fP() \fBBBP::std::strlen\fP (string str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<=\fP (std::Stack< std::string_element > &stack, std::conststring str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<=\fP (std::Stack< std::string_element > &stack, std::c_string str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<=\fP (std::Stack< std::string_element > &stack, std::string &str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<=\fP (std::Stack< std::string_element > &stack, char c)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<=\fP (std::Stack< std::string_element > &stack, int value)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<\fP (std::Stack< std::string_element > &stack, std::conststring str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<\fP (std::Stack< std::string_element > &stack, std::c_string str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<\fP (std::Stack< std::string_element > &stack, std::string &str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<\fP (std::Stack< std::string_element > &stack, int value)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator>>=\fP (std::Stack< std::string_element > &stack, std::c_string *str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator>>=\fP (std::Stack< std::string_element > &stack, std::string *str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator>>\fP (std::Stack< std::string_element > &lh, std::Stack< std::string_element > &rh)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<\fP (std::Stack< std::string_element > &lh, std::Stack< std::string_element > &rh)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator>>=\fP (std::Stack< std::string_element > &lh, std::Stack< std::string_element > &rh)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator<<=\fP (std::Stack< std::string_element > &lh, std::Stack< std::string_element > &rh)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator>\fP (std::Stack< std::string_element > &stack, std::c_string *str)"
.br
.ti -1c
.RI "std::Stack< std::string_element > & \fBBBP::std::operator>\fP (std::Stack< std::string_element > &stack, std::string *str)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const typedef string_element * \fBBBP::std::conststring\fP"
.br
.ti -1c
.RI "const typedef ustring_element * \fBBBP::std::uconststring\fP"
.br
.ti -1c
.RI "const size_t \fBBBP::std::max_string_length\fP = 0xFFFF"
.br
.ti -1c
.RI "const std::conststring \fBBBP::std::space\fP = ' '"
.br
.ti -1c
.RI "const std::conststring \fBBBP::std::endl\fP = '\\n'"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for BBP Embedded kernel from the source code\&.
