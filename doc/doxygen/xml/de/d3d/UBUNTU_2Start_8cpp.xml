<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="de/d3d/UBUNTU_2Start_8cpp" kind="file" language="C++">
    <compoundname>UBUNTU/Start.cpp</compoundname>
    <includes refid="d0/def/Signal_8h" local="yes">../include/Signal.h</includes>
    <includes refid="d6/dd1/stdio_8h" local="yes">../include/stdio.h</includes>
    <includes refid="d0/d33/Resources_8h" local="yes">../include/Resources.h</includes>
    <includes refid="d0/d00/FileSys_8h" local="yes">../include/FileSys.h</includes>
    <includes refid="de/da9/Executable_8h" local="yes">../include/Executable.h</includes>
    <includes refid="da/d30/CPPApplications_8h" local="yes">../include/CPPApplications.h</includes>
    <includes refid="d2/d33/Time_8h" local="yes">../include/Time.h</includes>
    <includes refid="d2/dd1/Graphics_8h" local="yes">../include/Graphics.h</includes>
    <includes refid="d2/d4f/OS_8h" local="yes">../include/OS.h</includes>
    <includes local="yes">../../build/include/SDL.h</includes>
    <incdepgraph>
      <node id="7">
        <label>Memory.h</label>
        <link refid="de/d5c/Memory_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../include/Executable.h</label>
        <link refid="de/da9/Executable_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>../include/Time.h</label>
        <link refid="d2/d33/Time_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Strings.h</label>
        <link refid="de/d53/Strings_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Resources.h</label>
        <link refid="d0/d33/Resources_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Stack.hxx</label>
        <link refid="db/d61/Stack_8hxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Memory.hxx</label>
        <link refid="d5/d4e/Memory_8hxx"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>../include/OS.h</label>
        <link refid="d2/d4f/OS_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../include/FileSys.h</label>
        <link refid="d0/d00/FileSys_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>../include/Graphics.h</label>
        <link refid="d2/dd1/Graphics_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../include/stdio.h</label>
        <link refid="d6/dd1/stdio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>errno.h</label>
        <link refid="d8/dc2/errno_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Start.cpp</label>
        <link refid="de/d3d/UBUNTU_2Start_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../include/Signal.h</label>
        <link refid="d0/def/Signal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Except.h</label>
        <link refid="dc/d88/Except_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>../../build/include/SDL.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="df/dd8/stdint_8h"/>
      </node>
      <node id="3">
        <label>stddef.h</label>
        <link refid="d3/dce/stddef_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>../include/CPPApplications.h</label>
        <link refid="da/d30/CPPApplications_8h"/>
      </node>
      <node id="11">
        <label>Stack.h</label>
        <link refid="dc/db6/Stack_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="de/d3d/UBUNTU_2Start_8cpp_1a51f528deaaeb973f417b46a2ec36f850" prot="public" static="no">
        <name>SDL_MAIN_HANDLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/env_UBUNTU/Start.cpp" line="11" column="9" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/env_UBUNTU/Start.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="de/d3d/UBUNTU_2Start_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/env_UBUNTU/Start.cpp" line="22" column="5" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/env_UBUNTU/Start.cpp" bodystart="22" bodyend="138"/>
        <references refid="dd/d98/namespaceBBP_1_1std_1aa4b7f66aef4bb8963e9fec9370186362" compoundref="db/db7/Start_8cpp" startline="15">BBP::std::activemem</references>
        <references refid="de/da9/Executable_8h_1a189b977bce41f28b79b93ee49d865464" compoundref="de/da9/Executable_8h" startline="6">BBP_EXEC_MAGIC0</references>
        <references refid="de/da9/Executable_8h_1ac126b4aa1240953826a3d8a98137a6a1" compoundref="de/da9/Executable_8h" startline="11">BBP_EXEC_MAGIC0IDX</references>
        <references refid="de/da9/Executable_8h_1a10e28214a4fe2b9e7f9a6f30f67b73fa" compoundref="de/da9/Executable_8h" startline="7">BBP_EXEC_MAGIC1</references>
        <references refid="de/da9/Executable_8h_1ac5e1f51fb84fe0b3e5a895a7853034e0" compoundref="de/da9/Executable_8h" startline="12">BBP_EXEC_MAGIC1IDX</references>
        <references refid="de/da9/Executable_8h_1a498a6d3b3a4e3199972bad1bd23e5e10" compoundref="de/da9/Executable_8h" startline="8">BBP_EXEC_MAGIC2</references>
        <references refid="de/da9/Executable_8h_1ac6465393b9b9f30cb7cdc709dbe24162" compoundref="de/da9/Executable_8h" startline="13">BBP_EXEC_MAGIC2IDX</references>
        <references refid="de/da9/Executable_8h_1a0c96c678ebe827291be2d49c15185b26" compoundref="de/da9/Executable_8h" startline="9">BBP_EXEC_MAGIC3</references>
        <references refid="de/da9/Executable_8h_1a647a624bb6e5d68230288b5e271cf15f" compoundref="de/da9/Executable_8h" startline="14">BBP_EXEC_MAGIC3IDX</references>
        <references refid="d9/d6f/namespaceBBP_1a2f249970c78eb045d841a355fb07ca46">BBP::boot_main</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1afd8f9cf4a159c7b6d0c6e82da35f2561" compoundref="d7/d67/tterm_8cpp" startline="53" endline="58">BBP::std::captureInput</references>
        <references refid="d4/dbd/classBBP_1_1std_1_1FILE_1a0a06d09de567928faea10565289627c6" compoundref="d0/ddd/File_2File_8cpp" startline="146" endline="159">BBP::std::FILE::close</references>
        <references refid="df/ddc/structBBP_1_1std_1_1PAGE_1a02cc2cb6b1940e10fb3b4defba203ac6" compoundref="de/d5c/Memory_8h" startline="43">BBP::std::PAGE&lt; T &gt;::data</references>
        <references refid="df/ddc/structBBP_1_1std_1_1PAGE_1a3b5c962d781f42d8dc36949061c308ab" compoundref="de/d5c/Memory_8h" startline="35">BBP::std::PAGE&lt; T &gt;::dataSize</references>
        <references refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a1fe4dd3e15724a9b5e2a41ef90075de6" compoundref="db/d83/Resources_8cpp" startline="321" endline="327">BBP::std::ResourceManager::dealloc</references>
        <references refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a8e0f86cd9da420b4a60eebda495b8309" compoundref="db/d83/Resources_8cpp" startline="293" endline="319">BBP::std::ResourceManager::deleteAll</references>
        <references refid="d9/db7/namespaceBBP_1_1std_1_1Driver_1afdd73d9627318511baf99a3392dd0b7e" compoundref="df/d3f/Graphics_8cpp" startline="74" endline="81">BBP::std::Driver::destructGraphics</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1ac61033216dba0a78b0f6a0504bd65de7" compoundref="d6/dc6/Executable_8cpp" startline="7">BBP::std::executables</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1ace14a8680f46b3c05954e4d1f03ab1fe" compoundref="d6/dc6/Executable_8cpp" startline="14" endline="118">BBP::std::execute</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a0851f8e5e3525c4f603e00533b47828d" compoundref="db/db7/Start_8cpp" startline="16">BBP::std::fileTable</references>
        <references refid="db/d2b/structBBP_1_1std_1_1window_1a7b1763f76820bdf7523a92187c575c4a" compoundref="d2/dd1/Graphics_8h" startline="65">BBP::std::window::fontSize</references>
        <references refid="db/d2b/structBBP_1_1std_1_1window_1a4620071899508871297f6960ee6c3b27" compoundref="d2/dd1/Graphics_8h" startline="66">BBP::std::window::fontSpacing</references>
        <references refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a88b2740fa8c5b5e30e6ef08cb8c7d883" compoundref="db/d83/Resources_8cpp" startline="57" endline="72">BBP::std::ResourceManager::free</references>
        <references refid="dc/da1/namespaceBBP_1_1std_1_1R2D_1aec7ebe885d0c8a1b5bf5b98b4d08a4ef" compoundref="de/db8/R2D_8cpp" startline="167" endline="217">BBP::std::R2D::GetFontFromFile</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1abb651bebc3ebf0ec448bd20d4637894c" compoundref="d8/d38/Time_8cpp" startline="6" endline="9">BBP::std::initClock</references>
        <references refid="d9/db7/namespaceBBP_1_1std_1_1Driver_1affc18526448cf9c01bfb96ffd83aed81" compoundref="df/d3f/Graphics_8cpp" startline="13" endline="47">BBP::std::Driver::initializeGraphics</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1aa3c0f7be0e430e039686fe4f39671dda" compoundref="db/db7/Start_8cpp" startline="20">BBP::std::kernelDisplay</references>
        <references refid="d9/d6f/namespaceBBP_1aa14c9c6b5ef8116b2d552362ff8860f9" compoundref="dc/d9b/Logout_8cpp" startline="10" endline="13">BBP::logout_main</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a5cfc8725bc7a0d1680e104d51a78fa32" compoundref="d0/d00/FileSys_8h" startline="28">BBP::std::max_open_files</references>
        <references refid="d9/d6f/namespaceBBP_1af3fe0646c6739928ebbbf2e7591002e0" compoundref="d3/da0/neofetch_8cpp" startline="17" endline="56">BBP::neofetch_main</references>
        <references refid="de/d21/classBBP_1_1std_1_1Stack_1aaacd32840edd56a62471a2aedbbe85dc" compoundref="dc/db6/Stack_8h" startline="64">BBP::std::Stack&lt; K &gt;::page</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1aad5dbefef1eb6b9223decf87db4d9bad" compoundref="db/db7/Start_8cpp" startline="17">BBP::std::primaryVolume</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1aacd39619cb9601c160fd4df069d49ee9" compoundref="d7/d67/tterm_8cpp" startline="10" endline="33">BBP::std::print_to_terminal</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1ae2638cc9dc88324f52ad018fe65b591f" compoundref="db/db7/Start_8cpp" startline="14">BBP::std::progmem</references>
        <references refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" compoundref="de/d5c/Memory_8h" startline="42">BBP::std::PAGE&lt; T &gt;::raw</references>
        <references refid="d9/d6f/namespaceBBP_1a0ba2e2ff83f9f917f9811058a5d02a0b" compoundref="de/dd1/Smile_8cpp" startline="26" endline="218">BBP::smile_main</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a4eb11df4d80a8a9c26ee099360e6597e">BBP::std::STDERR</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a0e604b25e277316ba6a6d604812bbee3">BBP::std::STDIN</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a66376ec3b30a50cc25df09f23fdd6733">BBP::std::STDOUT</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a8ac22bbb922d0cc3f48d445afed09351" compoundref="d7/d67/tterm_8cpp" startline="60" endline="65">BBP::std::stopCapturingInput</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a2f7b7b3936492dde3cceacc3e74f5cc3" compoundref="de/db8/R2D_8cpp" startline="33">BBP::std::vmem</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1ac1cb8213f09bf1f77b2e1793adf0b862" compoundref="db/db7/Start_8cpp" startline="18">BBP::std::workingDirectory</references>
        <references refid="de/d21/classBBP_1_1std_1_1Stack_1a32ce717db41d8608a8659a0ebac0ae16" compoundref="dc/db6/Stack_8h" startline="72">BBP::std::Stack&lt; K &gt;::writeTo</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../include/Signal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/Resources.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/FileSys.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/Executable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/CPPApplications.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/Time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/Graphics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/OS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="de/d3d/UBUNTU_2Start_8cpp_1a51f528deaaeb973f417b46a2ec36f850" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAIN_HANDLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../build/include/SDL.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="d6/d73/classBBP_1_1std_1_1ResourceManager" kindref="compound">BBP::std::ResourceManager</ref><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae2638cc9dc88324f52ad018fe65b591f" kindref="member">BBP::std::progmem</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="d6/d73/classBBP_1_1std_1_1ResourceManager" kindref="compound">BBP::std::ResourceManager</ref><sp/>*<ref refid="dd/d98/namespaceBBP_1_1std_1aa4b7f66aef4bb8963e9fec9370186362" kindref="member">BBP::std::activemem</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE" kindref="compound">BBP::std::STATIC_PAGE&lt;BBP::std::FileNode, BBP::std::max_open_files&gt;</ref><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a0851f8e5e3525c4f603e00533b47828d" kindref="member">BBP::std::fileTable</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="dd/d40/classBBP_1_1std_1_1VOLUME" kindref="compound">BBP::std::VOLUME</ref><sp/>*<ref refid="dd/d98/namespaceBBP_1_1std_1aad5dbefef1eb6b9223decf87db4d9bad" kindref="member">BBP::std::primaryVolume</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="d8/dea/classBBP_1_1std_1_1PATH" kindref="compound">BBP::std::PATH</ref><sp/>*<ref refid="dd/d98/namespaceBBP_1_1std_1ac1cb8213f09bf1f77b2e1793adf0b862" kindref="member">BBP::std::workingDirectory</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="db/d2b/structBBP_1_1std_1_1window" kindref="compound">BBP::std::window</ref><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aa3c0f7be0e430e039686fe4f39671dda" kindref="member">BBP::std::kernelDisplay</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="de/d3d/UBUNTU_2Start_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="de/d3d/UBUNTU_2Start_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//BBP::std::STDERR.writeTo<sp/>=<sp/>BBP::std::print_to_terminal;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a66376ec3b30a50cc25df09f23fdd6733" kindref="member">BBP::std::STDOUT</ref>.<ref refid="de/d21/classBBP_1_1std_1_1Stack_1a32ce717db41d8608a8659a0ebac0ae16" kindref="member">writeTo</ref><sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aacd39619cb9601c160fd4df069d49ee9" kindref="member">BBP::std::print_to_terminal</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aa4b7f66aef4bb8963e9fec9370186362" kindref="member">BBP::std::activemem</ref><sp/>=<sp/>&amp;<ref refid="dd/d98/namespaceBBP_1_1std_1ae2638cc9dc88324f52ad018fe65b591f" kindref="member">BBP::std::progmem</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">BBP::std::index_t</ref><sp/>node<sp/>=<sp/>0;<sp/>node<sp/>&lt;<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a5cfc8725bc7a0d1680e104d51a78fa32" kindref="member">BBP::std::max_open_files</ref>;<sp/>node++)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a0851f8e5e3525c4f603e00533b47828d" kindref="member">BBP::std::fileTable</ref>.data[node]<sp/>=<sp/><ref refid="dc/d3b/structBBP_1_1std_1_1FileNode" kindref="compound">BBP::std::FileNode</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d40/classBBP_1_1std_1_1VOLUME" kindref="compound">BBP::std::VOLUME</ref><sp/>prim(</highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/mnt/v/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aad5dbefef1eb6b9223decf87db4d9bad" kindref="member">BBP::std::primaryVolume</ref><sp/>=<sp/>&amp;prim;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/dea/classBBP_1_1std_1_1PATH" kindref="compound">BBP::std::PATH</ref><sp/>p(</highlight><highlight class="stringliteral">&quot;/home/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ac1cb8213f09bf1f77b2e1793adf0b862" kindref="member">BBP::std::workingDirectory</ref><sp/>=<sp/>&amp;p;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbd/classBBP_1_1std_1_1FILE" kindref="compound">BBP::std::FILE</ref><sp/>f(<ref refid="dd/d98/namespaceBBP_1_1std_1a66376ec3b30a50cc25df09f23fdd6733" kindref="member">BBP::std::STDOUT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;/proc/stdout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbd/classBBP_1_1std_1_1FILE" kindref="compound">BBP::std::FILE</ref><sp/>f2(<ref refid="dd/d98/namespaceBBP_1_1std_1a0e604b25e277316ba6a6d604812bbee3" kindref="member">BBP::std::STDIN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;/proc/stdin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/db7/namespaceBBP_1_1std_1_1Driver_1affc18526448cf9c01bfb96ffd83aed81" kindref="member">BBP::std::Driver::initializeGraphics</ref>(&amp;<ref refid="dd/d98/namespaceBBP_1_1std_1aa3c0f7be0e430e039686fe4f39671dda" kindref="member">BBP::std::kernelDisplay</ref>,<sp/>1000,<sp/>800);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/dea/classBBP_1_1std_1_1PATH" kindref="compound">BBP::std::PATH</ref><sp/>path(</highlight><highlight class="stringliteral">&quot;/bin/font&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/da1/namespaceBBP_1_1std_1_1R2D_1aec7ebe885d0c8a1b5bf5b98b4d08a4ef" kindref="member">BBP::std::R2D::GetFontFromFile</ref>(&amp;<ref refid="dd/d98/namespaceBBP_1_1std_1aa3c0f7be0e430e039686fe4f39671dda" kindref="member">BBP::std::kernelDisplay</ref>,<sp/>path);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aa3c0f7be0e430e039686fe4f39671dda" kindref="member">BBP::std::kernelDisplay</ref>.<ref refid="db/d2b/structBBP_1_1std_1_1window_1a7b1763f76820bdf7523a92187c575c4a" kindref="member">fontSize</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aa3c0f7be0e430e039686fe4f39671dda" kindref="member">BBP::std::kernelDisplay</ref>.<ref refid="db/d2b/structBBP_1_1std_1_1window_1a4620071899508871297f6960ee6c3b27" kindref="member">fontSpacing</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>system<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1abb651bebc3ebf0ec448bd20d4637894c" kindref="member">BBP::std::initClock</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>magicCount<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/ddc/structBBP_1_1std_1_1PAGE" kindref="compound">BBP::std::PAGE&lt;BBP::std::string_element&gt;</ref><sp/>bootPage(magicCount<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref>),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref><sp/>*)<ref refid="dd/d98/namespaceBBP_1_1std_1aa4b7f66aef4bb8963e9fec9370186362" kindref="member">BBP::std::activemem</ref>-&gt;malloc(magicCount<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref>)));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d21/classBBP_1_1std_1_1Stack" kindref="compound">BBP::std::Stack&lt;BBP::std::string_element&gt;</ref><sp/>bootStack(&amp;bootPage,<sp/>bootPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a3b5c962d781f42d8dc36949061c308ab" kindref="member">dataSize</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref><sp/>*)bootPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>)[0]<sp/>=<sp/><ref refid="d9/d6f/namespaceBBP_1a2f249970c78eb045d841a355fb07ca46" kindref="member">BBP::boot_main</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>bootPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac126b4aa1240953826a3d8a98137a6a1" kindref="member">BBP_EXEC_MAGIC0IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a189b977bce41f28b79b93ee49d865464" kindref="member">BBP_EXEC_MAGIC0</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>bootPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac5e1f51fb84fe0b3e5a895a7853034e0" kindref="member">BBP_EXEC_MAGIC1IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a10e28214a4fe2b9e7f9a6f30f67b73fa" kindref="member">BBP_EXEC_MAGIC1</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>bootPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac6465393b9b9f30cb7cdc709dbe24162" kindref="member">BBP_EXEC_MAGIC2IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a498a6d3b3a4e3199972bad1bd23e5e10" kindref="member">BBP_EXEC_MAGIC2</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>bootPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1a647a624bb6e5d68230288b5e271cf15f" kindref="member">BBP_EXEC_MAGIC3IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a0c96c678ebe827291be2d49c15185b26" kindref="member">BBP_EXEC_MAGIC3</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/ddc/structBBP_1_1std_1_1PAGE" kindref="compound">BBP::std::PAGE&lt;BBP::std::string_element&gt;</ref><sp/>logoutPage(magicCount<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref>),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref><sp/>*)<ref refid="dd/d98/namespaceBBP_1_1std_1aa4b7f66aef4bb8963e9fec9370186362" kindref="member">BBP::std::activemem</ref>-&gt;malloc(magicCount<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref>)));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d21/classBBP_1_1std_1_1Stack" kindref="compound">BBP::std::Stack&lt;BBP::std::string_element&gt;</ref><sp/>logoutStack(&amp;logoutPage,<sp/>logoutPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a3b5c962d781f42d8dc36949061c308ab" kindref="member">dataSize</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref><sp/>*)logoutPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>)[0]<sp/>=<sp/><ref refid="d9/d6f/namespaceBBP_1aa14c9c6b5ef8116b2d552362ff8860f9" kindref="member">BBP::logout_main</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>logoutPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac126b4aa1240953826a3d8a98137a6a1" kindref="member">BBP_EXEC_MAGIC0IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a189b977bce41f28b79b93ee49d865464" kindref="member">BBP_EXEC_MAGIC0</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>logoutPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac5e1f51fb84fe0b3e5a895a7853034e0" kindref="member">BBP_EXEC_MAGIC1IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a10e28214a4fe2b9e7f9a6f30f67b73fa" kindref="member">BBP_EXEC_MAGIC1</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>logoutPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac6465393b9b9f30cb7cdc709dbe24162" kindref="member">BBP_EXEC_MAGIC2IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a498a6d3b3a4e3199972bad1bd23e5e10" kindref="member">BBP_EXEC_MAGIC2</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>logoutPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1a647a624bb6e5d68230288b5e271cf15f" kindref="member">BBP_EXEC_MAGIC3IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a0c96c678ebe827291be2d49c15185b26" kindref="member">BBP_EXEC_MAGIC3</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/ddc/structBBP_1_1std_1_1PAGE" kindref="compound">BBP::std::PAGE&lt;BBP::std::string_element&gt;</ref><sp/>neofetchPage(magicCount<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref>),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref><sp/>*)<ref refid="dd/d98/namespaceBBP_1_1std_1aa4b7f66aef4bb8963e9fec9370186362" kindref="member">BBP::std::activemem</ref>-&gt;malloc(magicCount<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref>)));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d21/classBBP_1_1std_1_1Stack" kindref="compound">BBP::std::Stack&lt;BBP::std::string_element&gt;</ref><sp/>neofetchStack(&amp;neofetchPage,<sp/>neofetchPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a3b5c962d781f42d8dc36949061c308ab" kindref="member">dataSize</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref><sp/>*)neofetchPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>)[0]<sp/>=<sp/><ref refid="d9/d6f/namespaceBBP_1af3fe0646c6739928ebbbf2e7591002e0" kindref="member">BBP::neofetch_main</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>neofetchPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac126b4aa1240953826a3d8a98137a6a1" kindref="member">BBP_EXEC_MAGIC0IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a189b977bce41f28b79b93ee49d865464" kindref="member">BBP_EXEC_MAGIC0</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>neofetchPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac5e1f51fb84fe0b3e5a895a7853034e0" kindref="member">BBP_EXEC_MAGIC1IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a10e28214a4fe2b9e7f9a6f30f67b73fa" kindref="member">BBP_EXEC_MAGIC1</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>neofetchPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac6465393b9b9f30cb7cdc709dbe24162" kindref="member">BBP_EXEC_MAGIC2IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a498a6d3b3a4e3199972bad1bd23e5e10" kindref="member">BBP_EXEC_MAGIC2</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>neofetchPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1a647a624bb6e5d68230288b5e271cf15f" kindref="member">BBP_EXEC_MAGIC3IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a0c96c678ebe827291be2d49c15185b26" kindref="member">BBP_EXEC_MAGIC3</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/ddc/structBBP_1_1std_1_1PAGE" kindref="compound">BBP::std::PAGE&lt;BBP::std::string_element&gt;</ref><sp/>badapplePage(magicCount<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref>),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref><sp/>*)<ref refid="dd/d98/namespaceBBP_1_1std_1aa4b7f66aef4bb8963e9fec9370186362" kindref="member">BBP::std::activemem</ref>-&gt;malloc(magicCount<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1aa4895fd7a0ffe3b69a98a63605dd421e" kindref="member">BBP::std::string_element</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref>)));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d21/classBBP_1_1std_1_1Stack" kindref="compound">BBP::std::Stack&lt;BBP::std::string_element&gt;</ref><sp/>badAppleStack(&amp;badapplePage,<sp/>badapplePage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a3b5c962d781f42d8dc36949061c308ab" kindref="member">dataSize</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="dd/d98/namespaceBBP_1_1std_1a8be34f3cea8a96fceaaac40e4934944a" kindref="member">BBP::std::executable_main</ref><sp/>*)badapplePage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>)[0]<sp/>=<sp/><ref refid="d9/d6f/namespaceBBP_1a0ba2e2ff83f9f917f9811058a5d02a0b" kindref="member">BBP::smile_main</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>badapplePage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac126b4aa1240953826a3d8a98137a6a1" kindref="member">BBP_EXEC_MAGIC0IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a189b977bce41f28b79b93ee49d865464" kindref="member">BBP_EXEC_MAGIC0</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>badapplePage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac5e1f51fb84fe0b3e5a895a7853034e0" kindref="member">BBP_EXEC_MAGIC1IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a10e28214a4fe2b9e7f9a6f30f67b73fa" kindref="member">BBP_EXEC_MAGIC1</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>badapplePage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1ac6465393b9b9f30cb7cdc709dbe24162" kindref="member">BBP_EXEC_MAGIC2IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a498a6d3b3a4e3199972bad1bd23e5e10" kindref="member">BBP_EXEC_MAGIC2</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>badapplePage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a1ce02e31f319282c829fa96e887df0d8" kindref="member">raw</ref>[<ref refid="de/da9/Executable_8h_1a647a624bb6e5d68230288b5e271cf15f" kindref="member">BBP_EXEC_MAGIC3IDX</ref>]<sp/>=<sp/><ref refid="de/da9/Executable_8h_1a0c96c678ebe827291be2d49c15185b26" kindref="member">BBP_EXEC_MAGIC3</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbd/classBBP_1_1std_1_1FILE" kindref="compound">BBP::std::FILE</ref><sp/>bootExec(bootStack,<sp/></highlight><highlight class="stringliteral">&quot;/proc/exec/boot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbd/classBBP_1_1std_1_1FILE" kindref="compound">BBP::std::FILE</ref><sp/>logoutExec(logoutStack,<sp/></highlight><highlight class="stringliteral">&quot;/proc/exec/logout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbd/classBBP_1_1std_1_1FILE" kindref="compound">BBP::std::FILE</ref><sp/>neofetchExec(neofetchStack,<sp/></highlight><highlight class="stringliteral">&quot;/proc/exec/neofetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dbd/classBBP_1_1std_1_1FILE" kindref="compound">BBP::std::FILE</ref><sp/>badappleExec(badAppleStack,<sp/></highlight><highlight class="stringliteral">&quot;/proc/exec/elsa&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Execute<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1afd8f9cf4a159c7b6d0c6e82da35f2561" kindref="member">BBP::std::captureInput</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ace14a8680f46b3c05954e4d1f03ab1fe" kindref="member">BBP::std::execute</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1ac61033216dba0a78b0f6a0504bd65de7" kindref="member">BBP::std::executables</ref>[0].entry,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a8ac22bbb922d0cc3f48d445afed09351" kindref="member">BBP::std::stopCapturingInput</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message<sp/>if<sp/>errno<sp/>is<sp/>not<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BBP::std::__errno<sp/>&amp;&amp;<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4eb11df4d80a8a9c26ee099360e6597e" kindref="member">BBP::std::STDERR</ref>.atElement)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a66376ec3b30a50cc25df09f23fdd6733" kindref="member">BBP::std::STDOUT</ref><sp/>&lt;&lt;=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4eb11df4d80a8a9c26ee099360e6597e" kindref="member">BBP::std::STDERR</ref>.<ref refid="de/d21/classBBP_1_1std_1_1Stack_1aaacd32840edd56a62471a2aedbbe85dc" kindref="member">page</ref>-&gt;<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a02cc2cb6b1940e10fb3b4defba203ac6" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>bootExec.<ref refid="d4/dbd/classBBP_1_1std_1_1FILE_1a0a06d09de567928faea10565289627c6" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>f.<ref refid="d4/dbd/classBBP_1_1std_1_1FILE_1a0a06d09de567928faea10565289627c6" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>f2.<ref refid="d4/dbd/classBBP_1_1std_1_1FILE_1a0a06d09de567928faea10565289627c6" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae2638cc9dc88324f52ad018fe65b591f" kindref="member">BBP::std::progmem</ref>.<ref refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a88b2740fa8c5b5e30e6ef08cb8c7d883" kindref="member">free</ref>(bootPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a02cc2cb6b1940e10fb3b4defba203ac6" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae2638cc9dc88324f52ad018fe65b591f" kindref="member">BBP::std::progmem</ref>.<ref refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a88b2740fa8c5b5e30e6ef08cb8c7d883" kindref="member">free</ref>(logoutPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a02cc2cb6b1940e10fb3b4defba203ac6" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae2638cc9dc88324f52ad018fe65b591f" kindref="member">BBP::std::progmem</ref>.<ref refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a88b2740fa8c5b5e30e6ef08cb8c7d883" kindref="member">free</ref>(neofetchPage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a02cc2cb6b1940e10fb3b4defba203ac6" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae2638cc9dc88324f52ad018fe65b591f" kindref="member">BBP::std::progmem</ref>.<ref refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a88b2740fa8c5b5e30e6ef08cb8c7d883" kindref="member">free</ref>(badapplePage.<ref refid="df/ddc/structBBP_1_1std_1_1PAGE_1a02cc2cb6b1940e10fb3b4defba203ac6" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//BBP::std::progmem.free(BBP::std::fileTable.data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae2638cc9dc88324f52ad018fe65b591f" kindref="member">BBP::std::progmem</ref>.<ref refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a8e0f86cd9da420b4a60eebda495b8309" kindref="member">deleteAll</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/db7/namespaceBBP_1_1std_1_1Driver_1afdd73d9627318511baf99a3392dd0b7e" kindref="member">BBP::std::Driver::destructGraphics</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a2f7b7b3936492dde3cceacc3e74f5cc3" kindref="member">BBP::std::vmem</ref>.<ref refid="d6/d73/classBBP_1_1std_1_1ResourceManager_1a1fe4dd3e15724a9b5e2a41ef90075de6" kindref="member">dealloc</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BBP::std::__errno;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="143"><highlight class="comment">BBP::std::static_string<sp/>STDERRPage;</highlight></codeline>
<codeline lineno="144"><highlight class="comment">BBP::std::Stack&lt;BBP::std::string_element&gt;<sp/>BBP::std::STDERR(&amp;STDERRPage,<sp/>4096);</highlight></codeline>
<codeline lineno="145"><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment">BBP::std::static_string<sp/>STDOUTPage;</highlight></codeline>
<codeline lineno="147"><highlight class="comment">BBP::std::Stack&lt;BBP::std::string_element&gt;<sp/>BBP::std::STDOUT(&amp;STDOUTPage,<sp/>4096);</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">BBP::std::static_string<sp/>STDINPage;</highlight></codeline>
<codeline lineno="150"><highlight class="comment">BBP::std::Stack&lt;BBP::std::string_element&gt;<sp/>BBP::std::STDIN(&amp;STDINPage,<sp/>4096);</highlight></codeline>
<codeline lineno="151"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="153"><highlight class="comment">void<sp/>exec()</highlight></codeline>
<codeline lineno="154"><highlight class="comment">{</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::VOLUME<sp/>prim(&apos;v&apos;,<sp/>&quot;/mnt/v/&quot;);</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::primaryVolume<sp/>=<sp/>&amp;prim;</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::PATH<sp/>p(&quot;/home/&quot;);</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::workingDirectory<sp/>=<sp/>&amp;p;</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::FILE<sp/>f(BBP::std::STDOUT,<sp/>&quot;/mnt/v/proc/stdout&quot;);</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::FILE<sp/>f2(BBP::std::STDIN,<sp/>&quot;/mnt/v/proc/stdin&quot;);</highlight></codeline>
<codeline lineno="163"><highlight class="comment"></highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/>try</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::__errno<sp/>=<sp/>BBP::main();</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/>catch<sp/>(BBP::std::except<sp/>&amp;e)</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::printf(&quot;\nUncaught<sp/>exception:<sp/>Program<sp/>terminated<sp/>with<sp/>code<sp/>%u.\n&quot;,<sp/>BBP::std::__errno);</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>catch<sp/>(int<sp/>sig)</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(sig)</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>BBP::std::SIGTERM:</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::STDERR<sp/>&lt;&lt;<sp/>&quot;[BBP]<sp/>Received<sp/>signal<sp/>&apos;SIGTERM&apos;:<sp/>Terminating<sp/>program.&quot;<sp/>&lt;&lt;=<sp/>BBP::std::endl;</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>BBP::std::SIGSEGV:</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::STDERR<sp/>&lt;&lt;<sp/>&quot;[BBP]<sp/>Received<sp/>signal<sp/>&apos;SIGSEGV&apos;:<sp/>Terminating<sp/>program.&quot;<sp/>&lt;&lt;=<sp/>BBP::std::endl;</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>BBP::std::SIGINT:</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::STDERR<sp/>&lt;&lt;<sp/>&quot;[BBP]<sp/>Received<sp/>unhandled<sp/>interrupt:<sp/>Terminating<sp/>program.&quot;<sp/>&lt;&lt;=<sp/>BBP::std::endl;</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>BBP::std::SIGILL:</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::STDERR<sp/>&lt;&lt;<sp/>&quot;[BBP]<sp/>Illegal<sp/>instruction:<sp/>Terminating<sp/>program.&quot;<sp/>&lt;&lt;=<sp/>BBP::std::endl;</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>BBP::std::SIGABRT:</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::STDERR<sp/>&lt;&lt;<sp/>&quot;[BBP]<sp/>Aborting<sp/>program<sp/>execution.&quot;<sp/>&lt;&lt;=<sp/>BBP::std::endl;</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>BBP::std::SIGFPE:</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::STDERR<sp/>&lt;&lt;<sp/>&quot;[BBP]<sp/>Unhandled<sp/>math<sp/>error:<sp/>Terminating<sp/>program.&quot;<sp/>&lt;&lt;=<sp/>BBP::std::endl;</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="comment"></highlight></codeline>
<codeline lineno="197"><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/>f2.close();</highlight></codeline>
<codeline lineno="200"><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::progmem.free(BBP::std::fileTable.data);</highlight></codeline>
<codeline lineno="202"><highlight class="comment">}</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">int<sp/>main()</highlight></codeline>
<codeline lineno="205"><highlight class="comment">{</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::STDERR.writeTo<sp/>=<sp/>BBP::std::print_to_terminal;</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::STDOUT.writeTo<sp/>=<sp/>BBP::std::print_to_terminal;</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::activemem<sp/>=<sp/>&amp;BBP::std::progmem;</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::fileTable<sp/>=<sp/>BBP::std::PAGE&lt;BBP::std::FileNode<sp/>*&gt;(BBP::std::max_open_files,<sp/>(BBP::std::FileNode<sp/>**)BBP::std::activemem-&gt;calloc(BBP::std::max_open_files,<sp/>sizeof(BBP::std::FileNode<sp/>*)));</highlight></codeline>
<codeline lineno="212"><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/>exec();</highlight></codeline>
<codeline lineno="216"><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Destroy<sp/>anything<sp/>if<sp/>needed.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::size_t<sp/>deletedCount<sp/>=<sp/>BBP::std::activemem-&gt;deleteAll();</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::size_t<sp/>freedCount<sp/>=<sp/>BBP::std::activemem-&gt;freeAll();</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/>BBP::std::size_t<sp/>totalCount<sp/>=<sp/>freedCount<sp/>+<sp/>deletedCount;</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(totalCount)</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::STDERR<sp/>&lt;&lt;<sp/>&quot;\nNot<sp/>all<sp/>memory<sp/>on<sp/>the<sp/>heap<sp/>was<sp/>released.&quot;<sp/>&lt;&lt;=<sp/>BBP::std::endl;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::printf(&quot;\tAmount<sp/>of<sp/>blocks<sp/>free&apos;d:<sp/>%u\n&quot;,<sp/>freedCount);</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BBP::std::printf(&quot;\tAmount<sp/>of<sp/>blocks<sp/>delete&apos;d:<sp/>%u\n&quot;,<sp/>deletedCount);</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//BBP::std::STDERR<sp/>&lt;&lt;<sp/>&quot;All<sp/>memory<sp/>was<sp/>released!<sp/>Good<sp/>job<sp/>:)&quot;<sp/>&lt;&lt;=<sp/>BBP::std::endl;</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>BBP::std::__errno;</highlight></codeline>
<codeline lineno="237"><highlight class="comment">}</highlight></codeline>
<codeline lineno="238"><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment">*/</highlight></codeline>
    </programlisting>
    <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/env_UBUNTU/Start.cpp"/>
  </compounddef>
</doxygen>
