<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d8/d04/classBBP_1_1userspace_1_1lvalue" kind="class" language="C++" prot="public">
    <compoundname>BBP::userspace::lvalue</compoundname>
    <basecompoundref refid="d4/d87/classBBP_1_1userspace_1_1pvalue" prot="public" virt="virtual">BBP::userspace::pvalue</basecompoundref>
    <derivedcompoundref refid="dc/d6d/classBBP_1_1userspace_1_1xvalue" prot="private" virt="non-virtual">BBP::userspace::xvalue</derivedcompoundref>
    <includes refid="d8/da7/ValueCategories_8h" local="no">ValueCategories.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1ace29071288d57ed260e3c4def955b639" prot="protected" static="no" mutable="no">
        <type><ref refid="d8/da2/structBBP_1_1userspace_1_1register__t" kindref="compound">register_t</ref> *</type>
        <definition>register_t* BBP::userspace::lvalue::_register</definition>
        <argsstring></argsstring>
        <name>_register</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="42" column="12" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1a4f608b6c9d67370868b513d0a613e369" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BBP::userspace::lvalue::isRegister</definition>
        <argsstring></argsstring>
        <name>isRegister</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="43" column="6" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1a2b34d6fbb5e7e920adb8cefab86724fc" prot="protected" static="no" mutable="no">
        <type><ref refid="dd/d98/namespaceBBP_1_1std_1a03632bff3fd98378d63d18e829a72de1" kindref="member">std::address_t</ref></type>
        <definition>std::address_t BBP::userspace::lvalue::PhysicalAddress</definition>
        <argsstring></argsstring>
        <name>PhysicalAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="46" column="16" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1a004b8d67fe4057480dbf9a483d9d9f17" prot="protected" static="no" mutable="no">
        <type><ref refid="dd/d98/namespaceBBP_1_1std_1a03632bff3fd98378d63d18e829a72de1" kindref="member">std::address_t</ref></type>
        <definition>std::address_t BBP::userspace::lvalue::VirtualMemory</definition>
        <argsstring></argsstring>
        <name>VirtualMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="47" column="16" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1af0d58a58e337a8860b7be9f1606e1bfe" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BBP::userspace::lvalue::isAddress</definition>
        <argsstring></argsstring>
        <name>isAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="48" column="6" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1a298d2412e3fb2a9f20db16f5007b1237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBP::userspace::lvalue::lvalue</definition>
        <argsstring>()</argsstring>
        <name>lvalue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="52" column="1" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/lvalue.cpp" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1abc09790e147b6868c34917efd0478372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBP::userspace::lvalue::lvalue</definition>
        <argsstring>(userspace::StateMachine &amp;state, userspace::Instruction::Arg &amp;)</argsstring>
        <name>lvalue</name>
        <param>
          <type><ref refid="d0/d71/classBBP_1_1userspace_1_1StateMachine" kindref="compound">userspace::StateMachine</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg" kindref="compound">userspace::Instruction::Arg</ref> &amp;</type>
          <defname>arg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="53" column="1" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/lvalue.cpp" bodystart="12" bodyend="48"/>
        <references refid="d0/def/Signal_8h_1a82e69d819748cab5933309bba1999f7c" compoundref="d0/def/Signal_8h" startline="9">__SIGNAL__</references>
        <references refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg_1a65c669132d3694858349e0351adc684c" compoundref="d9/dd5/Instructions_8h" startline="30">BBP::userspace::Instruction::Arg::data</references>
        <references refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg_1a3c9244fbcf23af61dbb1d479fcd2db12" compoundref="d9/dd5/Instructions_8h" startline="43">BBP::userspace::Instruction::Arg::isLiteralArg</references>
        <references refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg_1ac9cd5bfb02e10c26a7f528a9e9740256" compoundref="d9/dd5/Instructions_8h" startline="33">BBP::userspace::Instruction::Arg::referenced</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1add07926a91c5970f2faffcc64a68283c" compoundref="d0/def/Signal_8h" startline="31">BBP::std::SIGILL</references>
        <references refid="de/dd1/Smile_8cpp_1a06db5103abddb53ccb11f2121e18d0ba" compoundref="de/dd1/Smile_8cpp" startline="24">state</references>
        <references refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg_1a9a714513ad5761be5a569722a49fe46a" compoundref="d9/dd5/Instructions_8h" startline="37">BBP::userspace::Instruction::Arg::trailerCount</references>
        <references refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg_1a22ae6c2cd5ccaa4c641f3e98344d81dc" compoundref="d9/dd5/Instructions_8h" startline="40">BBP::userspace::Instruction::Arg::trailers</references>
      </memberdef>
      <memberdef kind="function" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1a8148d4fec076833a89cc9d3ff6758c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BBP::userspace::lvalue::dereference</definition>
        <argsstring>(userspace::StateMachine &amp;state, std::address_t)</argsstring>
        <name>dereference</name>
        <reimplements refid="d4/d87/classBBP_1_1userspace_1_1pvalue_1a76d1fe37965aa866f92e8683c767d57c">dereference</reimplements>
        <reimplementedby refid="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a07cbbdfeddb7d414dbe5987a55bbf83f">dereference</reimplementedby>
        <param>
          <type><ref refid="d0/d71/classBBP_1_1userspace_1_1StateMachine" kindref="compound">userspace::StateMachine</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="dd/d98/namespaceBBP_1_1std_1a03632bff3fd98378d63d18e829a72de1" kindref="member">std::address_t</ref></type>
          <defname>lvalueFor</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="56" column="6" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/lvalue.cpp" bodystart="51" bodyend="366"/>
        <references refid="d0/def/Signal_8h_1a82e69d819748cab5933309bba1999f7c" compoundref="d0/def/Signal_8h" startline="9">__SIGNAL__</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ae0583745bd1abc773575e4213c90d197" compoundref="dd/d0e/Threading_8h" startline="41">BBP::userspace::Thread::ah</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a2737b31d9bd9aebef036986824f4b7e1" compoundref="dd/d0e/Threading_8h" startline="42">BBP::userspace::Thread::al</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a27803495fb9a05bbf1a96da61a2cc6da" compoundref="dd/d0e/Threading_8h" startline="86">BBP::userspace::Thread::asi</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a091c686ebf3ee419ab3b1f27c75d6243" compoundref="dd/d0e/Threading_8h" startline="40">BBP::userspace::Thread::ax</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a2e6356168cfa3143e001cf33c01d5f6c" compoundref="dd/d0e/Threading_8h" startline="56">BBP::userspace::Thread::bh</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ab9a8b34e80698113ea98c804146a4cf8" compoundref="dd/d0e/Threading_8h" startline="57">BBP::userspace::Thread::bl</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1abb41185d93313b98b7a8d460cdd038e3" compoundref="dd/d0e/Threading_8h" startline="55">BBP::userspace::Thread::bx</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ae453514b7d75c9379a24cc67f1adc8d7" compoundref="dd/d0e/Threading_8h" startline="46">BBP::userspace::Thread::ch</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a5ca06241d37ede20dc012df55d697d04" compoundref="dd/d0e/Threading_8h" startline="47">BBP::userspace::Thread::cl</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a46b4c25e0f16726bf83f0049bc3f3479" compoundref="dd/d0e/Threading_8h" startline="82">BBP::userspace::Thread::cs</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ac7d0bc05b62b9f5fbe7a9a6d237eb80b" compoundref="dd/d0e/Threading_8h" startline="73">BBP::userspace::Thread::ct</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a10f73778efd5361812c3ba7cd72680ca" compoundref="dd/d0e/Threading_8h" startline="45">BBP::userspace::Thread::cx</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a6da7b540e94efb88eca16e0ae16c4180" compoundref="dd/d0e/Threading_8h" startline="51">BBP::userspace::Thread::dh</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a5343dcec3d6a75a94b7b937582aa6cdd" compoundref="dd/d0e/Threading_8h" startline="66">BBP::userspace::Thread::dih</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a0357fd60d4bba2f4048acfebe1dc42e0" compoundref="dd/d0e/Threading_8h" startline="67">BBP::userspace::Thread::dil</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a5281beaa825637fea5b9242a7c523e17" compoundref="dd/d0e/Threading_8h" startline="65">BBP::userspace::Thread::dix</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a193a79614154aabe79a861c99dc6363a" compoundref="dd/d0e/Threading_8h" startline="52">BBP::userspace::Thread::dl</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a017137975e004e47f82719cd1b84b936" compoundref="dd/d0e/Threading_8h" startline="50">BBP::userspace::Thread::dx</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a7e6c9bb100607a256739439ae762bcf4" compoundref="dd/d0e/Threading_8h" startline="39">BBP::userspace::Thread::eax</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a5ac8ac8a7fec67daea31b9663f519504" compoundref="dd/d0e/Threading_8h" startline="54">BBP::userspace::Thread::ebx</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a587439c6e965a29e92ae6428ab5d6573" compoundref="dd/d0e/Threading_8h" startline="44">BBP::userspace::Thread::ecx</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a6c50e9093b5d2641c2a031121037e81f" compoundref="dd/d0e/Threading_8h" startline="64">BBP::userspace::Thread::edi</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a8ddc89699f73970b78d7bd570de2062a" compoundref="dd/d0e/Threading_8h" startline="49">BBP::userspace::Thread::edx</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a9c9b4ca599f0708782fb29a88d1bffcc" compoundref="dd/d0e/Threading_8h" startline="89">BBP::userspace::Thread::eip</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a025c51e88d747354aa4d7c21b09d26fc" compoundref="dd/d0e/Threading_8h" startline="59">BBP::userspace::Thread::esi</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1abb9f013e6a43d9115398c80089cc51cc" compoundref="dd/d0e/Threading_8h" startline="23">BBP::userspace::Thread::executable</references>
        <references refid="d0/d71/classBBP_1_1userspace_1_1StateMachine_1aa56ef9d93d0c958c0c243213fc25c714" compoundref="d6/d82/StateMachine_8cpp" startline="125" endline="133">BBP::userspace::StateMachine::getActiveThread</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a497c0ca0bd3b1016e05ce36f4149dfa0" compoundref="dd/d0e/Threading_8h" startline="87">BBP::userspace::Thread::gsi</references>
        <references refid="de/dfe/namespaceBBP_1_1userspace_1a06f813df088f2fb3990a48989111f3e7aeded923dda42f65772df4af35c0e5a67" compoundref="d1/d12/Opcodes_8h" startline="107">BBP::userspace::HIBY</references>
        <references refid="de/dfe/namespaceBBP_1_1userspace_1a06f813df088f2fb3990a48989111f3e7a9f2f406525408f8a7f89384be8a07abc" compoundref="d1/d12/Opcodes_8h" startline="105">BBP::userspace::HIHW</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a1d56f597933907ebc3d65c3a80b250bd" compoundref="dd/d0e/Threading_8h" startline="79">BBP::userspace::Thread::ho</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ab885e6aaf110ac74312312318b04ae55" compoundref="dd/d0e/Threading_8h" startline="78">BBP::userspace::Thread::hv</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ad59b710fa833f7129f167a75b08904f8" compoundref="dd/d0e/Threading_8h" startline="91">BBP::userspace::Thread::ih</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ab6031eb2c6310b4a1b4d92578a5f7bb7" compoundref="dd/d0e/Threading_8h" startline="92">BBP::userspace::Thread::il</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a8e0978ddfbdc0673b38431c5c681ee6d" compoundref="dd/d0e/Threading_8h" startline="90">BBP::userspace::Thread::ip</references>
        <references refid="de/dfe/namespaceBBP_1_1userspace_1a06f813df088f2fb3990a48989111f3e7abb3c2eebadc66472b86011db667a4552" compoundref="d1/d12/Opcodes_8h" startline="108">BBP::userspace::LOBY</references>
        <references refid="de/dfe/namespaceBBP_1_1userspace_1a06f813df088f2fb3990a48989111f3e7a7eea2e6ae8522a32e0047f20df27ed7d" compoundref="d1/d12/Opcodes_8h" startline="106">BBP::userspace::LOHW</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ae7b2f6497a115fe0a96b2e0725cc9464" compoundref="dd/d0e/Threading_8h" startline="71">BBP::userspace::Thread::ob</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a16bb4264aa352e4909154f607dafc1e9" compoundref="dd/d0e/Threading_8h" startline="74">BBP::userspace::Thread::pp</references>
        <references refid="de/dfe/namespaceBBP_1_1userspace_1a41ba557dd9a83d4d21fd785e7c9d373d" compoundref="d1/d12/Opcodes_8h" startline="101">BBP::userspace::REGISTERPAGE</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a893cf64b5a97a0a980afe0450c8cce91" compoundref="dd/d0e/Threading_8h" startline="83">BBP::userspace::Thread::sf</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1add07926a91c5970f2faffcc64a68283c" compoundref="d0/def/Signal_8h" startline="31">BBP::std::SIGILL</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1acb1abf2f2f46649035aacd5253d1b003" compoundref="dd/d0e/Threading_8h" startline="61">BBP::userspace::Thread::sih</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a8686af4436ad154156d0e551d03a8cc1" compoundref="dd/d0e/Threading_8h" startline="62">BBP::userspace::Thread::sil</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1abec3c72369208cfdb29f29f2ced5b57f" compoundref="dd/d0e/Threading_8h" startline="94">BBP::userspace::Thread::sip</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ac28099912b7547b9e4c1f2c0cd3ce073" compoundref="dd/d0e/Threading_8h" startline="60">BBP::userspace::Thread::six</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1ad07ed768cf5b70972f30cd96ac28dc9a" compoundref="dd/d0e/Threading_8h" startline="81">BBP::userspace::Thread::ss</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1acc978723c18ec669365f9f0390e7c086" compoundref="dd/d0e/Threading_8h" startline="77">BBP::userspace::Thread::ssx</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a143b0e8e4ce8fe16587de158de104ffc" compoundref="dd/d0e/Threading_8h" startline="70">BBP::userspace::Thread::st</references>
        <references refid="de/dd1/Smile_8cpp_1a06db5103abddb53ccb11f2121e18d0ba" compoundref="de/dd1/Smile_8cpp" startline="24">state</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1afa1fbba683a0ad21146264ab3014001f" compoundref="dd/d0e/Threading_8h" startline="85">BBP::userspace::Thread::sui</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a47c6d08f5243c58fc2b19ca9c6c9bb9e" compoundref="dd/d0e/Threading_8h" startline="72">BBP::userspace::Thread::tb</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a40b4d770802e9e0131c5a18debf59d2c" compoundref="dd/d0e/Threading_8h" startline="69">BBP::userspace::Thread::tix</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1a837030f550670fb800bd30f67985dbd4" compoundref="dd/d0e/Threading_8h" startline="75">BBP::userspace::Thread::tp</references>
        <references refid="d0/dc2/classBBP_1_1userspace_1_1BinaryExecutable_1a96eb4539fc4f247710a8c1effabea87e" compoundref="de/d02/BinaryExecutables_8cpp" startline="150" endline="170">BBP::userspace::BinaryExecutable::virtualToPhysical</references>
      </memberdef>
      <memberdef kind="function" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1a2e0677fec41b6afc029ebc5ab17c0d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BBP::userspace::lvalue::reference</definition>
        <argsstring>(userspace::StateMachine &amp;state, pvalue &amp;)</argsstring>
        <name>reference</name>
        <param>
          <type><ref refid="d0/d71/classBBP_1_1userspace_1_1StateMachine" kindref="compound">userspace::StateMachine</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="d4/d87/classBBP_1_1userspace_1_1pvalue" kindref="compound">pvalue</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="57" column="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d04/classBBP_1_1userspace_1_1lvalue_1a613afac910aadefe91088ae6764ee035" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref></type>
        <definition>BBP::std::word BBP::userspace::lvalue::resolve</definition>
        <argsstring>(userspace::StateMachine &amp;state)</argsstring>
        <name>resolve</name>
        <reimplements refid="d4/d87/classBBP_1_1userspace_1_1pvalue_1ab92bee3a8f6bc51e5b461b0c13c87bfd">resolve</reimplements>
        <reimplementedby refid="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a684b5ded4d4fc02eb6bf8e44fa380550">resolve</reimplementedby>
        <param>
          <type><ref refid="d0/d71/classBBP_1_1userspace_1_1StateMachine" kindref="compound">userspace::StateMachine</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="60" column="11" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/lvalue.cpp" bodystart="368" bodyend="389"/>
        <references refid="d0/def/Signal_8h_1a82e69d819748cab5933309bba1999f7c" compoundref="d0/def/Signal_8h" startline="9">__SIGNAL__</references>
        <references refid="d0/dc2/classBBP_1_1userspace_1_1BinaryExecutable_1ab75ab6cf2c312ecb34fe62562936ce67" compoundref="d0/dcf/BinaryExecutable_8h" startline="52">BBP::userspace::BinaryExecutable::BinaryData</references>
        <references refid="d5/d8b/structBBP_1_1userspace_1_1Thread_1abb9f013e6a43d9115398c80089cc51cc" compoundref="dd/d0e/Threading_8h" startline="23">BBP::userspace::Thread::executable</references>
        <references refid="d0/d71/classBBP_1_1userspace_1_1StateMachine_1aa56ef9d93d0c958c0c243213fc25c714" compoundref="d6/d82/StateMachine_8cpp" startline="125" endline="133">BBP::userspace::StateMachine::getActiveThread</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a1d232f50fc4e569e79449970f1b4bb9e">BBP::std::read</references>
        <references refid="de/dfe/namespaceBBP_1_1userspace_1a484d19b0d23141290394e25753c95bfb" compoundref="d9/de4/Registers_8cpp" startline="76" endline="105">BBP::userspace::readRegister</references>
        <references refid="dd/d98/namespaceBBP_1_1std_1a8b214d5bdfe950ea0efc262c569ff9ef" compoundref="d0/def/Signal_8h" startline="29">BBP::std::SIGSEGV</references>
        <references refid="de/dd1/Smile_8cpp_1a06db5103abddb53ccb11f2121e18d0ba" compoundref="de/dd1/Smile_8cpp" startline="24">state</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BBP::userspace::xvalue</label>
        <link refid="dc/d6d/classBBP_1_1userspace_1_1xvalue"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BBP::userspace::lvalue</label>
        <link refid="d8/d04/classBBP_1_1userspace_1_1lvalue"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BBP::userspace::pvalue</label>
        <link refid="d4/d87/classBBP_1_1userspace_1_1pvalue"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>BBP::userspace::Thread</label>
        <link refid="d5/d8b/structBBP_1_1userspace_1_1Thread"/>
        <childnode refid="8" relation="usage">
          <edgelabel>+argumentPage</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>+registerData</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>+instruction</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+generalStackSize</edgelabel>
          <edgelabel>+argumentStackSize</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>+generalStack</edgelabel>
          <edgelabel>+argumentStack</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>+TLS</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>+active</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>+allocator</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>+executable</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+dl</edgelabel>
          <edgelabel>+cl</edgelabel>
          <edgelabel>+six</edgelabel>
          <edgelabel>+bl</edgelabel>
          <edgelabel>+tix</edgelabel>
          <edgelabel>+sih</edgelabel>
          <edgelabel>+al</edgelabel>
          <edgelabel>+ht</edgelabel>
          <edgelabel>+dix</edgelabel>
          <edgelabel>+tp</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>+generalPage</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>+registerCount</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>size_t</label>
      </node>
      <node id="19">
        <label>byte *</label>
      </node>
      <node id="36">
        <label>void * *</label>
      </node>
      <node id="42">
        <label>BBP::std::STATIC_PAGE&lt; BBP::userspace::MemoryRegion, 8 &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; BBP::userspace::MemoryRegion, 8 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>T</label>
      </node>
      <node id="37">
        <label>void *</label>
      </node>
      <node id="17">
        <label>BBP::std::STATIC_PAGE&lt; std::byte, registerCount *4 &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; std::byte, registerCount *4 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>BBP::std::ResourceManager</label>
        <link refid="d6/d73/classBBP_1_1std_1_1ResourceManager"/>
        <childnode refid="34" relation="usage">
          <edgelabel>-allocations</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>-invalidAllocationIndex</edgelabel>
          <edgelabel>-invalidObjectIndex</edgelabel>
          <edgelabel>-nextObjectAvailable</edgelabel>
          <edgelabel>-nextAllocationAvailable</edgelabel>
          <edgelabel>+totalAllocations</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>-objects</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>word</label>
      </node>
      <node id="12">
        <label>mem_t *</label>
      </node>
      <node id="29">
        <label>BBP::std::PAGE&lt; K &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="30" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; K &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>PAGE&lt; T &gt; *</label>
      </node>
      <node id="45">
        <label>BBP::std::STATIC_PAGE&lt; std::word, generalStackSize &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; std::word, generalStackSize &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>BBP::userspace::Instruction</label>
        <link refid="d0/dfc/structBBP_1_1userspace_1_1Instruction"/>
        <childnode refid="22" relation="usage">
          <edgelabel>+args</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>+header</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>BBP::std::PAGE&lt; BBP::userspace::MemoryRegion &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="10" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; BBP::userspace::MemoryRegion &gt;</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>BBP::userspace::Instruction::Head</label>
        <link refid="d5/d1c/structBBP_1_1userspace_1_1Instruction_1_1Head"/>
        <childnode refid="23" relation="usage">
          <edgelabel>+args</edgelabel>
          <edgelabel>+flags</edgelabel>
          <edgelabel>+suffix</edgelabel>
          <edgelabel>+opcode</edgelabel>
          <edgelabel>+prefix</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>BBP::std::PAGE&lt; std::string_element &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="10" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; std::string_element &gt;</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>BBP::std::PAGE&lt; std::byte &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="10" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; std::byte &gt;</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>BBP::std::AbstractGCEntry</label>
        <link refid="d7/def/structBBP_1_1std_1_1AbstractGCEntry"/>
      </node>
      <node id="10">
        <label>anonymous:+@1</label>
      </node>
      <node id="24">
        <label>unsigned int</label>
      </node>
      <node id="16">
        <label>BBP::std::STATIC_PAGE&lt; T, K &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>byte</label>
      </node>
      <node id="44">
        <label>BBP::userspace::MemoryRegion</label>
        <link refid="d3/de6/structBBP_1_1userspace_1_1MemoryRegion"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+writeable</edgelabel>
          <edgelabel>+allocated</edgelabel>
          <edgelabel>+executable</edgelabel>
          <edgelabel>+readable</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+virtualMemoryHead</edgelabel>
          <edgelabel>+size</edgelabel>
          <edgelabel>+physicalMemoryHead</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>BBP::std::STATIC_PAGE&lt; std::word, argumentStackSize &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; std::word, argumentStackSize &gt;</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>string_element *</label>
      </node>
      <node id="34">
        <label>BBP::std::STATIC_PAGE&lt; void *, max_allocations &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; void *, max_allocations &gt;</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>uint8_t</label>
      </node>
      <node id="30">
        <label>K *</label>
      </node>
      <node id="5">
        <label>registerSize</label>
      </node>
      <node id="39">
        <label>BBP::std::PAGE&lt; BBP::std::AbstractGCEntry * &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="10" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; BBP::std::AbstractGCEntry * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>BBP::std::Stack&lt; K &gt;</label>
        <link refid="de/d21/classBBP_1_1std_1_1Stack"/>
        <childnode refid="27" relation="usage">
          <edgelabel>+readFrom</edgelabel>
          <edgelabel>+writeTo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+atElement</edgelabel>
          <edgelabel>+max_elements</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>+page</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>BBP::userspace::Instruction::Arg</label>
        <link refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg"/>
        <childnode refid="23" relation="usage">
          <edgelabel>+trailerCount</edgelabel>
          <edgelabel>+offset</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>+anyvalue</edgelabel>
          <edgelabel>+dereferenced</edgelabel>
          <edgelabel>+referenced</edgelabel>
          <edgelabel>+isLiteralArg</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>+data</edgelabel>
          <edgelabel>+trailers</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BBP::userspace::lvalue</label>
        <link refid="d8/d04/classBBP_1_1userspace_1_1lvalue"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>#isAddress</edgelabel>
          <edgelabel>#isRegister</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#_register</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#VirtualMemory</edgelabel>
          <edgelabel>#PhysicalAddress</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BBP::userspace::register_t</label>
        <link refid="d8/da2/structBBP_1_1userspace_1_1register__t"/>
        <childnode refid="5" relation="usage">
          <edgelabel>+size</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+index</edgelabel>
          <edgelabel>+offset</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+owner</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>BBP::std::Stack&lt; std::word &gt;</label>
        <link refid="de/d21/classBBP_1_1std_1_1Stack"/>
        <childnode refid="9" relation="usage">
          <edgelabel>+page</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>+readFrom</edgelabel>
          <edgelabel>+writeTo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+atElement</edgelabel>
          <edgelabel>+max_elements</edgelabel>
        </childnode>
        <childnode refid="28" relation="template-instance">
          <edgelabel>&lt; std::word &gt;</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>BBP::userspace::BinaryExecutable</label>
        <link refid="d0/dc2/classBBP_1_1userspace_1_1BinaryExecutable"/>
        <childnode refid="31" relation="usage">
          <edgelabel>+BinaryData</edgelabel>
          <edgelabel>-TLSData</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-allocated</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>-allocator</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>+mapping</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+totalSize</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>word *</label>
      </node>
      <node id="3">
        <label>bool</label>
      </node>
      <node id="2">
        <label>BBP::userspace::pvalue</label>
        <link refid="d4/d87/classBBP_1_1userspace_1_1pvalue"/>
      </node>
      <node id="35">
        <label>BBP::std::PAGE&lt; void * &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="36" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; void * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>void(*)(Stack&lt; K &gt; *)</label>
      </node>
      <node id="13">
        <label>BBP::std::PAGE&lt; T &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="10" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>BBP::std::STATIC_PAGE&lt; BBP::std::AbstractGCEntry *, max_objects &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; BBP::std::AbstractGCEntry *, max_objects &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>BBP::std::PAGE&lt; std::word &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="10" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; std::word &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="39" column="1" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" bodystart="38" bodyend="61"/>
    <listofallmembers>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1ace29071288d57ed260e3c4def955b639" prot="protected" virt="non-virtual"><scope>BBP::userspace::lvalue</scope><name>_register</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a8148d4fec076833a89cc9d3ff6758c92" prot="public" virt="virtual"><scope>BBP::userspace::lvalue</scope><name>dereference</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1af0d58a58e337a8860b7be9f1606e1bfe" prot="protected" virt="non-virtual"><scope>BBP::userspace::lvalue</scope><name>isAddress</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a4f608b6c9d67370868b513d0a613e369" prot="protected" virt="non-virtual"><scope>BBP::userspace::lvalue</scope><name>isRegister</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a298d2412e3fb2a9f20db16f5007b1237" prot="public" virt="non-virtual"><scope>BBP::userspace::lvalue</scope><name>lvalue</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1abc09790e147b6868c34917efd0478372" prot="public" virt="non-virtual"><scope>BBP::userspace::lvalue</scope><name>lvalue</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a2b34d6fbb5e7e920adb8cefab86724fc" prot="protected" virt="non-virtual"><scope>BBP::userspace::lvalue</scope><name>PhysicalAddress</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a2e0677fec41b6afc029ebc5ab17c0d34" prot="public" virt="non-virtual"><scope>BBP::userspace::lvalue</scope><name>reference</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a613afac910aadefe91088ae6764ee035" prot="public" virt="virtual"><scope>BBP::userspace::lvalue</scope><name>resolve</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a004b8d67fe4057480dbf9a483d9d9f17" prot="protected" virt="non-virtual"><scope>BBP::userspace::lvalue</scope><name>VirtualMemory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
