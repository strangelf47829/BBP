<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d9/d9b/Builder_8cpp" kind="file" language="C++">
    <compoundname>Builder.cpp</compoundname>
    <includes refid="db/de5/ELF_8h" local="yes">../include/ELF.h</includes>
    <includes refid="d5/dfd/ELSABackend_8h" local="yes">../include/ELSABackend.h</includes>
    <includes refid="de/d23/StressRelief_8h" local="yes">../include/StressRelief.h</includes>
    <incdepgraph>
      <node id="3">
        <label>Memory.h</label>
        <link refid="de/d5c/Memory_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../include/ELSABackend.h</label>
        <link refid="d5/dfd/ELSABackend_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>../include/StressRelief.h</label>
        <link refid="de/d23/StressRelief_8h"/>
      </node>
      <node id="9">
        <label>Strings.h</label>
        <link refid="de/d53/Strings_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Resources.h</label>
        <link refid="d0/d33/Resources_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ELF32.h</label>
        <link refid="d1/d5d/ELF32_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Stack.hxx</label>
        <link refid="db/d61/Stack_8hxx"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Memory.hxx</label>
        <link refid="d5/d4e/Memory_8hxx"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>FileSys.h</label>
        <link refid="d0/d00/FileSys_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stdio.h</label>
        <link refid="d6/dd1/stdio_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>errno.h</label>
        <link refid="d8/dc2/errno_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Builder.cpp</label>
        <link refid="d9/d9b/Builder_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Signal.h</label>
        <link refid="d0/def/Signal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Except.h</label>
        <link refid="dc/d88/Except_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Lex.h</label>
        <link refid="df/d80/Lex_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="df/dd8/stdint_8h"/>
      </node>
      <node id="4">
        <label>stddef.h</label>
        <link refid="d3/dce/stddef_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../include/ELF.h</label>
        <link refid="db/de5/ELF_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Stack.h</label>
        <link refid="dc/db6/Stack_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../include/ELF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/ELSABackend.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/StressRelief.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1a8ca25cf116cdbb92f7ed4702a62e9d11" refkind="member"><highlight class="normal"><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1a8ca25cf116cdbb92f7ed4702a62e9d11" kindref="member">BBP::esa::BinaryApplication::BinaryApplication</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1ae95e98217b6c3191605f0d7dd5f483a9" kindref="member">std::conststring</ref><sp/>name,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1abd480c5a3803a8d9621cfdc79b051a7c" kindref="member">std::size_t</ref><sp/>extraSegments,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1abd480c5a3803a8d9621cfdc79b051a7c" kindref="member">std::size_t</ref><sp/>extraSections,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1abd480c5a3803a8d9621cfdc79b051a7c" kindref="member">std::size_t</ref><sp/>extraSymbols)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>builder(std::<ref refid="dd/d98/namespaceBBP_1_1std_1aa4b7f66aef4bb8963e9fec9370186362" kindref="member">activemem</ref>,<sp/>6<sp/>+<sp/>extraSegments,<sp/>14<sp/>+<sp/>extraSections,<sp/>1<sp/>+<sp/>extraSymbols),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>builderStack(&amp;builder.file,<sp/>std::<ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">seqlen</ref>(builder.file)),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>file(builderStack,<sp/>name),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>mangled(&amp;mangledPage,<sp/>128)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Form<sp/>the<sp/>standard<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1ad996895ec4edcaf3ee96175caae5841e" kindref="member">builder</ref>.<ref refid="d3/d63/classBBP_1_1std_1_1ELF_1_1ELFBuilder_1af7708be2d563034de2361e84eacdb48d" kindref="member">formStandard</ref>(255,<sp/>255,<sp/>255,<sp/>255);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1aae12c360f177a00ed49d6a3280951a67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1aae12c360f177a00ed49d6a3280951a67" kindref="member">BBP::esa::BinaryApplication::addDataToSection</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>section,<sp/><ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry" kindref="compound">esa::dataEntry</ref><sp/>&amp;entry)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>section<sp/>has<sp/>a<sp/>size<sp/>of<sp/>0,<sp/>append<sp/>then<sp/>recalculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(builder.sections[section].stack.max_elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.sections[section].Append(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.sections[section].size(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>recalculate<sp/>offsets<sp/>only<sp/>for<sp/>sections<sp/>and<sp/>headers<sp/>after<sp/>this<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.recalculateOffsets(builder.sections[section].offset(),<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>offset<sp/>within<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a1925e2de0eb8458e499e1c95ec33f546" kindref="member">offset</ref><sp/>=<sp/>builder.sections[section].stack.atElement;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>section<sp/>offset<sp/>is<sp/>bigger<sp/>than<sp/>the<sp/>requested<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a1925e2de0eb8458e499e1c95ec33f546" kindref="member">offset</ref><sp/>+<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref><sp/>&gt;=<sp/>builder.sections[section].stack.max_elements)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>section<sp/>does<sp/>not<sp/>have<sp/>shentsize,<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(builder.sections[section].entsize()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.sections[section].Extend(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref><sp/>&gt;<sp/>128<sp/>?<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref><sp/>:<sp/>128);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>just<sp/>print<sp/>something<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref><sp/>deficit<sp/>=<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a1925e2de0eb8458e499e1c95ec33f546" kindref="member">offset</ref><sp/>+<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref><sp/>-<sp/>builder.sections[section].stack.max_elements;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref><sp/>esize<sp/>=<sp/>builder.sections[section].entsize();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>amount<sp/>of<sp/>times<sp/>entsize<sp/>needs<sp/>to<sp/>be<sp/>expanded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a8adbd1d0e37ca1d674470ea445a255a3" kindref="member">std::halfword</ref><sp/>leftOver<sp/>=<sp/>deficit<sp/>%<sp/>esize;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref><sp/>count<sp/>=<sp/>(deficit<sp/>/<sp/>esize)<sp/>+<sp/>!!(leftOver);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.sections[section].Extend(count<sp/>*<sp/>esize);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>set<sp/>the<sp/>right<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1af83b1b785c3358d3beb0905ba50c1712" kindref="member">elfData</ref><sp/>=<sp/>&amp;builder.sections[section].stack[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a1925e2de0eb8458e499e1c95ec33f546" kindref="member">offset</ref>];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>write<sp/>the<sp/>data,<sp/>if<sp/>it<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d24/classGoto_1a59e11de02662de61c81e16084186d98c" kindref="member">Goto::Hell</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1ab6572c55c1f1f9381e0b8f525fb4f6a7" kindref="member">data</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref>;<sp/>idx++)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.sections[section].stack<sp/>&lt;&lt;<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1ab6572c55c1f1f9381e0b8f525fb4f6a7" kindref="member">data</ref>[idx];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.sections[section].stack.atElement<sp/>+=<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref>;<sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>doesn&apos;t,<sp/>just<sp/>artificially<sp/>move<sp/>the<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1addb7c5388abf47164e9041129185748c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1addb7c5388abf47164e9041129185748c" kindref="member">BBP::esa::BinaryApplication::addSymbol</ref>(<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry" kindref="compound">esa::dataEntry</ref><sp/>&amp;entry,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae95e98217b6c3191605f0d7dd5f483a9" kindref="member">std::conststring</ref><sp/>name)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>next<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref><sp/>=<sp/>builder.symbols.atElement;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols.atElement++;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rename<sp/>symbol<sp/>to<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.renameSymbol(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>save<sp/>data<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].size(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>set<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].info(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a9e8cb2136bb35ff0ada70bf212cd1862" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1a60bc8a3f3015af99daaa18ca276d8b21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1addb7c5388abf47164e9041129185748c" kindref="member">BBP::esa::BinaryApplication::addSymbol</ref>(<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry" kindref="compound">esa::dataEntry</ref><sp/>&amp;entry,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae95e98217b6c3191605f0d7dd5f483a9" kindref="member">std::conststring</ref><sp/>name,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>_override)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>next<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref><sp/>=<sp/>_override;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rename<sp/>symbol<sp/>to<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.renameSymbol(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>save<sp/>data<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].size(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a082e86443d75e53eac21d8907510a3b2" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>set<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].info(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a9e8cb2136bb35ff0ada70bf212cd1862" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1adf380f7751bf6f0f640ae6beaa678470" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1adf380f7751bf6f0f640ae6beaa678470" kindref="member">BBP::esa::BinaryApplication::setSource</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1ae95e98217b6c3191605f0d7dd5f483a9" kindref="member">std::conststring</ref><sp/>name)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry" kindref="compound">dataEntry</ref><sp/>source(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="d9/d86/namespaceBBP_1_1std_1_1ELF_1acf9d76b83af2bdb55c207716fb6e81d9a279b2c74a119180e34db1d5bbc95efd1" kindref="member">std::ELF::SYM_FILE</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>addSymbol(source,<sp/>name);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols[source.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].shndx(<ref refid="d9/d86/namespaceBBP_1_1std_1_1ELF_1a5f13f53e79754f9d1accab2c6c795463a888ffd9cca82af284a5bcc8315f327ad" kindref="member">std::ELF::SHN_ABS</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1a196824b68fa368b0fdb865f34ad980d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1a196824b68fa368b0fdb865f34ad980d8" kindref="member">BBP::esa::BinaryApplication::appendSymbols</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6eaa077f260b0319da866c90d59a5454ee7" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>atElement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>atElement<sp/>=<sp/>builder.symbols.atElement;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extend<sp/>symbol<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>builder._symtab().Extend(<ref refid="d1/d5d/ELF32_8h_1a5b0f690e568185bdf1273b1c1de3c67a" kindref="member">ELF_SYMBOL_ENTRYSIZE</ref><sp/>*<sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6eaa077f260b0319da866c90d59a5454ee7" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols.Extend(builder.allocator,<sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6eaa077f260b0319da866c90d59a5454ee7" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbolCount<sp/>+=<sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6eaa077f260b0319da866c90d59a5454ee7" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>builder._symtab().info(builder.symbolCount);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>ELF<sp/>Info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6eaa077f260b0319da866c90d59a5454ee7" kindref="member">n</ref>;<sp/>index++)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.symbols[builder.symbolCount<sp/>-<sp/>1<sp/>-<sp/>index].elf<sp/>=<sp/>&amp;builder;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.symbols[builder.symbolCount<sp/>-<sp/>1<sp/>-<sp/>index].header.bytes<sp/>=<sp/><ref refid="d1/d5d/ELF32_8h_1a5b0f690e568185bdf1273b1c1de3c67a" kindref="member">ELF_SYMBOL_ENTRYSIZE</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.symbols[builder.symbolCount<sp/>-<sp/>1<sp/>-<sp/>index].header.data<sp/>=<sp/>builder.sections[builder.symtab].data.data<sp/>+<sp/><ref refid="d1/d5d/ELF32_8h_1a5b0f690e568185bdf1273b1c1de3c67a" kindref="member">ELF_SYMBOL_ENTRYSIZE</ref><sp/>*<sp/>(builder.symbolCount<sp/>-<sp/>1<sp/>-<sp/>index);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extend<sp/>hash<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>builder._hashtab().Extend((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d98/namespaceBBP_1_1std_1a4926ba934876e4a1028b9abb47edbc56" kindref="member">std::byte</ref>))<sp/>*<sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6eaa077f260b0319da866c90d59a5454ee7" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.hashChainCount<sp/>=<sp/>builder.symbolCount;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>builder._symtab().stack.atElement<sp/>=<sp/>6<sp/>*<sp/>16;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>atElement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols.atElement<sp/>=<sp/>atElement;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1a2aab74057b13ed7c631a8cf3ebf96d16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1a2aab74057b13ed7c631a8cf3ebf96d16" kindref="member">BBP::esa::BinaryApplication::emitSymbol</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>section,<sp/><ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry" kindref="compound">esa::dataEntry</ref><sp/>&amp;entry,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae95e98217b6c3191605f0d7dd5f483a9" kindref="member">std::conststring</ref><sp/>name,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ad29f433a1c033a551d50291e7d3f50b4" kindref="member">std::hash_t</ref><sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6ea964920435d98b78e3d9898c14fdf2d48" kindref="member">hash</ref>,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>_override)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>symbol<sp/>memory<sp/>uniqueness,<sp/>since<sp/>an<sp/>overwrite<sp/>could<sp/>loose<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].isMemUnique)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Symbol<sp/>overwrite<sp/>looses<sp/>unique<sp/>data.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a61676e39b42371c65c3b960a91887b03" kindref="member">EADDRINUSE</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>overriding,<sp/>override.<sp/>Otherwise,<sp/>dont.<sp/>LOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_override)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addSymbol(entry,<sp/>name,<sp/>_override);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>symbol<sp/>has<sp/>reached<sp/>max,<sp/>extend<sp/>symbols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(builder.symbols.atElement<sp/>&gt;=<sp/>builder.symbolCount)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appendSymbols(1);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addSymbol(entry,<sp/>name);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>data<sp/>to<sp/>section,<sp/>if<sp/>section<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(section)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addDataToSection(section,<sp/>entry);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>also<sp/>update<sp/>the<sp/>remaining<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].shndx(section);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].value(entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a1925e2de0eb8458e499e1c95ec33f546" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].data<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1afb582024987be6020cff7542cd771ae7" kindref="member">std::string</ref>(builder.symbols[entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>].size(),<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1af83b1b785c3358d3beb0905ba50c1712" kindref="member">elfData</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Emit<sp/>symbol<sp/>hash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>couldHash<sp/>=<sp/>emitSymbolHash(<ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6ea964920435d98b78e3d9898c14fdf2d48" kindref="member">hash</ref>,<sp/>entry.<ref refid="d1/dcf/structBBP_1_1esa_1_1dataEntry_1a8c1459b17d8748706b0a17ceca6d4dbe" kindref="member">symbol</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!couldHash)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a8d46784954bec3eed0277416001174a5" kindref="member">std::printf</ref>(</highlight><highlight class="stringliteral">&quot;ELF<sp/>Builder:<sp/>Failed<sp/>to<sp/>hash<sp/>symbol\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1af27670d4109d1543aa48c2a4f1cb98e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1af27670d4109d1543aa48c2a4f1cb98e9" kindref="member">BBP::esa::BinaryApplication::emitSymbolHash</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1ad29f433a1c033a551d50291e7d3f50b4" kindref="member">std::hash_t</ref><sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6ea964920435d98b78e3d9898c14fdf2d48" kindref="member">hash</ref>,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>symbol)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>page<sp/>for<sp/>32<sp/>bit<sp/>sized<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/ddc/structBBP_1_1std_1_1PAGE" kindref="compound">std::PAGE&lt;std::word&gt;</ref><sp/>hashTable(2<sp/>+<sp/>builder.hashBucketCount<sp/>+<sp/>builder.hashChainCount,<sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref><sp/>*)builder.sections[builder.hashtab].data.data);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>also<sp/>write<sp/>the<sp/>has<sp/>to<sp/>the<sp/>corresponding<sp/>hash<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref><sp/>bucket<sp/>=<sp/><ref refid="d6/d2d/namespaceBBP_1_1Locale_1_1Japanese_1a02c028a34a00f11967f61a67255e0e6ea964920435d98b78e3d9898c14fdf2d48" kindref="member">hash</ref><sp/>%<sp/>builder.hashBucketCount;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>what<sp/>is<sp/>at<sp/>bucket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref><sp/>bucketValue<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a1d232f50fc4e569e79449970f1b4bb9e" kindref="member">std::read</ref>(&amp;hashTable,<sp/>2<sp/>+<sp/>bucket);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>value<sp/>is<sp/>0,<sp/>start<sp/>an<sp/>new<sp/>bucket<sp/>and<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bucketValue<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aa63573041786d49b7cdb2eec8a921a6a" kindref="member">std::write</ref>(&amp;hashTable,<sp/>symbol,<sp/>2<sp/>+<sp/>bucket);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>chain<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>chainIndex<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a1d232f50fc4e569e79449970f1b4bb9e" kindref="member">std::read</ref>(&amp;hashTable,<sp/>2<sp/>+<sp/>bucket);<sp/>chainIndex<sp/>&lt;<sp/>builder.hashChainCount;<sp/>chainIndex++)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>value<sp/>at<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref><sp/>chainValue<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a1d232f50fc4e569e79449970f1b4bb9e" kindref="member">std::read</ref>(&amp;hashTable,<sp/>2<sp/>+<sp/>builder.hashBucketCount<sp/>+<sp/>chainIndex);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>chain<sp/>has<sp/>value,<sp/>continue<sp/>at<sp/>next<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chainValue)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chainIndex<sp/>=<sp/>chainValue<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>symbol,<sp/>write<sp/>index<sp/>then<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aa63573041786d49b7cdb2eec8a921a6a" kindref="member">std::write</ref>(&amp;hashTable,<sp/>symbol,<sp/>2<sp/>+<sp/>builder.hashBucketCount<sp/>+<sp/>chainIndex);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>to<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1ad36d1a9ace4e2aaae92bebdce1227914" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1ad36d1a9ace4e2aaae92bebdce1227914" kindref="member">BBP::esa::BinaryApplication::save</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>file.writeFileToDisk();</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1aa3e4150fb317dd2705a9b5a6e6389b26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dbe/classBBP_1_1esa_1_1BinaryApplication_1aa3e4150fb317dd2705a9b5a6e6389b26" kindref="member">BBP::esa::BinaryApplication::close</ref>()</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.close();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/ELSA/Builder.cpp"/>
  </compounddef>
</doxygen>
