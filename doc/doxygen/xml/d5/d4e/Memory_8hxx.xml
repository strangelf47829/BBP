<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d5/d4e/Memory_8hxx" kind="file" language="C++">
    <compoundname>Memory.hxx</compoundname>
    <includes refid="dc/d88/Except_8h" local="yes">Except.h</includes>
    <includes refid="de/d5c/Memory_8h" local="yes">Memory.h</includes>
    <includedby refid="de/d5c/Memory_8h" local="yes">Memory.h</includedby>
    <incdepgraph>
      <node id="6">
        <label>Memory.h</label>
        <link refid="de/d5c/Memory_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Memory.hxx</label>
        <link refid="d5/d4e/Memory_8hxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>errno.h</label>
        <link refid="d8/dc2/errno_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Except.h</label>
        <link refid="dc/d88/Except_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
        <link refid="df/dd8/stdint_8h"/>
      </node>
      <node id="4">
        <label>stddef.h</label>
        <link refid="d3/dce/stddef_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="49">
        <label>ELFHeader.cpp</label>
        <link refid="d9/d1d/ELFHeader_8cpp"/>
      </node>
      <node id="31">
        <label>Start.cpp</label>
        <link refid="d6/d8a/MINGW64_2Start_8cpp"/>
      </node>
      <node id="10">
        <label>Shell.cpp</label>
        <link refid="df/d6c/Shell_8cpp"/>
      </node>
      <node id="2">
        <label>Memory.h</label>
        <link refid="de/d5c/Memory_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Executable.cpp</label>
        <link refid="d6/dc6/Executable_8cpp"/>
      </node>
      <node id="8">
        <label>Logout.cpp</label>
        <link refid="dc/d9b/Logout_8cpp"/>
      </node>
      <node id="27">
        <label>Start.cpp</label>
        <link refid="db/db7/Start_8cpp"/>
      </node>
      <node id="84">
        <label>Memory.cpp</label>
        <link refid="de/d25/EMULATOR_2Memory_8cpp"/>
      </node>
      <node id="83">
        <label>Memory.cpp</label>
        <link refid="d8/dcc/Memory_8cpp"/>
      </node>
      <node id="73">
        <label>SegmentBuilder.cpp</label>
        <link refid="d0/dc2/SegmentBuilder_8cpp"/>
      </node>
      <node id="37">
        <label>Terminal.cpp</label>
        <link refid="d3/d0d/Terminal_8cpp"/>
      </node>
      <node id="13">
        <label>Actions.cpp</label>
        <link refid="da/d4c/Actions_8cpp"/>
      </node>
      <node id="11">
        <label>Smile.cpp</label>
        <link refid="de/dd1/Smile_8cpp"/>
      </node>
      <node id="77">
        <label>Executable.h</label>
        <link refid="de/da9/Executable_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Graphics.cpp</label>
        <link refid="d3/df1/EMULATOR_2Graphics_8cpp"/>
      </node>
      <node id="20">
        <label>ELSABackend.h</label>
        <link refid="d5/dfd/ELSABackend_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>File.cpp</label>
        <link refid="d6/d5a/env__MINGW64_2File_8cpp"/>
      </node>
      <node id="14">
        <label>Auxiliary.cpp</label>
        <link refid="de/dec/Auxiliary_8cpp"/>
      </node>
      <node id="32">
        <label>tterm.cpp</label>
        <link refid="d0/d7e/MINGW64_2tterm_8cpp"/>
      </node>
      <node id="59">
        <label>Threading.h</label>
        <link refid="dd/d0e/Threading_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>Memory.cpp</label>
        <link refid="dc/d64/MINGW64_2Memory_8cpp"/>
      </node>
      <node id="3">
        <label>Strings.h</label>
        <link refid="de/d53/Strings_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>Resources.h</label>
        <link refid="d0/d33/Resources_8h"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>Registers.cpp</label>
        <link refid="d9/de4/Registers_8cpp"/>
      </node>
      <node id="16">
        <label>EABI.cpp</label>
        <link refid="d2/d8c/EABI_8cpp"/>
      </node>
      <node id="38">
        <label>Graphics.cpp</label>
        <link refid="df/d3f/Graphics_8cpp"/>
      </node>
      <node id="40">
        <label>Graphics.cpp</label>
        <link refid="d9/db9/MINGW64_2Graphics_8cpp"/>
      </node>
      <node id="18">
        <label>Processor.cpp</label>
        <link refid="d6/d69/Processor_8cpp"/>
      </node>
      <node id="71">
        <label>SectionBuilder.cpp</label>
        <link refid="d6/d8a/SectionBuilder_8cpp"/>
      </node>
      <node id="78">
        <label>Strings.cpp</label>
        <link refid="de/d6d/Strings_8cpp"/>
      </node>
      <node id="81">
        <label>Stack.hxx</label>
        <link refid="db/d61/Stack_8hxx"/>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>File.cpp</label>
        <link refid="d0/d45/env_2File_8cpp"/>
      </node>
      <node id="1">
        <label>Memory.hxx</label>
        <link refid="d5/d4e/Memory_8hxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>OS.h</label>
        <link refid="d2/d4f/OS_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>InstructionCycle.cpp</label>
        <link refid="d5/d95/InstructionCycle_8cpp"/>
      </node>
      <node id="6">
        <label>FileSys.h</label>
        <link refid="d0/d00/FileSys_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>stdio.cpp</label>
        <link refid="df/dce/stdio_8cpp"/>
      </node>
      <node id="61">
        <label>RAE.h</label>
        <link refid="db/d6a/RAE_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Actions.h</label>
        <link refid="de/db3/Actions_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>tterm.cpp</label>
        <link refid="d0/d75/UBUNTU_2tterm_8cpp"/>
      </node>
      <node id="86">
        <label>Memory.cpp</label>
        <link refid="d3/de1/UBUNTU_2Memory_8cpp"/>
      </node>
      <node id="30">
        <label>tterm.cpp</label>
        <link refid="d0/d6f/EMULATOR_2tterm_8cpp"/>
      </node>
      <node id="65">
        <label>StateMachine.cpp</label>
        <link refid="d6/d82/StateMachine_8cpp"/>
      </node>
      <node id="64">
        <label>lvalue.cpp</label>
        <link refid="d4/d56/lvalue_8cpp"/>
      </node>
      <node id="17">
        <label>Frontend.cpp</label>
        <link refid="d4/d83/Frontend_8cpp"/>
      </node>
      <node id="24">
        <label>Graphics.h</label>
        <link refid="d2/dd1/Graphics_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Start.cpp</label>
        <link refid="d0/d06/EMULATOR_2Start_8cpp"/>
      </node>
      <node id="51">
        <label>Resources.cpp</label>
        <link refid="db/d83/Resources_8cpp"/>
      </node>
      <node id="74">
        <label>SegmentBuilderGettersSetters.cpp</label>
        <link refid="db/db5/SegmentBuilderGettersSetters_8cpp"/>
      </node>
      <node id="72">
        <label>SectionBuilderGettersSetters.cpp</label>
        <link refid="dc/d51/SectionBuilderGettersSetters_8cpp"/>
      </node>
      <node id="50">
        <label>Except.cpp</label>
        <link refid="d4/df4/Except_8cpp"/>
      </node>
      <node id="4">
        <label>stdio.h</label>
        <link refid="d6/dd1/stdio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>Hyperv.h</label>
        <link refid="d0/dde/Hyperv_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>Registers.h</label>
        <link refid="d7/d2a/Registers_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Start.cpp</label>
        <link refid="de/d3d/UBUNTU_2Start_8cpp"/>
      </node>
      <node id="66">
        <label>ThreadState.cpp</label>
        <link refid="d8/df1/ThreadState_8cpp"/>
      </node>
      <node id="62">
        <label>StateMachine.h</label>
        <link refid="da/d78/StateMachine_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Backend.cpp</label>
        <link refid="d6/d3f/Backend_8cpp"/>
      </node>
      <node id="21">
        <label>Builder.cpp</label>
        <link refid="d9/d9b/Builder_8cpp"/>
      </node>
      <node id="55">
        <label>rvalue.cpp</label>
        <link refid="d1/d5d/rvalue_8cpp"/>
      </node>
      <node id="46">
        <label>File.cpp</label>
        <link refid="d3/dce/env__EMULATOR_2File_8cpp"/>
      </node>
      <node id="79">
        <label>Except.h</label>
        <link refid="dc/d88/Except_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Secondary.cpp</label>
        <link refid="d1/d38/Secondary_8cpp"/>
      </node>
      <node id="36">
        <label>ECMA35.h</label>
        <link refid="d5/d22/ECMA35_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Lex.h</label>
        <link refid="df/d80/Lex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>tterm.cpp</label>
        <link refid="d7/d67/tterm_8cpp"/>
      </node>
      <node id="5">
        <label>badapple.cpp</label>
        <link refid="d7/d40/badapple_8cpp"/>
      </node>
      <node id="44">
        <label>Volume.cpp</label>
        <link refid="de/d33/Volume_8cpp"/>
      </node>
      <node id="41">
        <label>Graphics.cpp</label>
        <link refid="d9/d4a/UBUNTU_2Graphics_8cpp"/>
      </node>
      <node id="70">
        <label>ELFHeaderGettersSetters.cpp</label>
        <link refid="dc/dc2/ELFHeaderGettersSetters_8cpp"/>
      </node>
      <node id="23">
        <label>Lexer.cpp</label>
        <link refid="d2/d15/Lexer_8cpp"/>
      </node>
      <node id="75">
        <label>SymbolBuilder.cpp</label>
        <link refid="d6/db7/SymbolBuilder_8cpp"/>
      </node>
      <node id="35">
        <label>R2D.cpp</label>
        <link refid="de/db8/R2D_8cpp"/>
      </node>
      <node id="42">
        <label>File.cpp</label>
        <link refid="d0/ddd/File_2File_8cpp"/>
      </node>
      <node id="68">
        <label>BinaryExecutable.h</label>
        <link refid="d0/dcf/BinaryExecutable_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>File.cpp</label>
        <link refid="da/d7b/env__UBUNTU_2File_8cpp"/>
      </node>
      <node id="9">
        <label>neofetch.cpp</label>
        <link refid="d3/da0/neofetch_8cpp"/>
      </node>
      <node id="53">
        <label>BinaryExecutables.cpp</label>
        <link refid="de/d02/BinaryExecutables_8cpp"/>
      </node>
      <node id="76">
        <label>SymbolBuilderGettersSetters.cpp</label>
        <link refid="d1/d6c/SymbolBuilderGettersSetters_8cpp"/>
      </node>
      <node id="58">
        <label>ELF.h</label>
        <link refid="db/de5/ELF_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>Path.cpp</label>
        <link refid="d5/dbb/Path_8cpp"/>
      </node>
      <node id="69">
        <label>ELF.cpp</label>
        <link refid="dd/dc2/ELF_8cpp"/>
      </node>
      <node id="63">
        <label>ValueCategories.h</label>
        <link refid="d8/da7/ValueCategories_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>Stack.h</label>
        <link refid="dc/db6/Stack_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>xvalue.cpp</label>
        <link refid="d6/db1/xvalue_8cpp"/>
      </node>
      <node id="56">
        <label>StateMachineOpcodes.cpp</label>
        <link refid="df/d1c/StateMachineOpcodes_8cpp"/>
      </node>
      <node id="12">
        <label>ELSA.h</label>
        <link refid="df/d71/ELSA_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d88/Except_8h" kindref="compound">Except.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d5c/Memory_8h" kindref="compound">Memory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BBP_STDLIB_MEMORY_HXX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BBP_STDLIB_MEMORY_HXX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1aa63573041786d49b7cdb2eec8a921a6a" kindref="member">BBP::std::write</ref>)(PAGE&lt;T&gt;<sp/>*page,<sp/>T<sp/>&amp;data,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>index<sp/>is<sp/>within<sp/>bounds,<sp/>and<sp/>if<sp/>next<sp/>page<sp/>is<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>page-&gt;dataSize<sp/>&amp;&amp;<sp/>page-&gt;nextPage)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="de/dfe/namespaceBBP_1_1userspace_1a61a881cf9970daa1511345a803c18049aeb09bbca61c392f16c3f078bcf0abcd9" kindref="member">write</ref>)(page-&gt;nextPage,<sp/>data,<sp/>index<sp/>-<sp/>page-&gt;dataSize);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page-&gt;data[index]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a3562de634247bfcc9588d254036740ea" kindref="member">BBP::std::write_a</ref>)(PAGE&lt;T&gt;<sp/>*page,<sp/>T<sp/>*data,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>amount)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>amount;<sp/>idx++)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="de/dfe/namespaceBBP_1_1userspace_1a61a881cf9970daa1511345a803c18049aeb09bbca61c392f16c3f078bcf0abcd9" kindref="member">std::write</ref>)(page,<sp/>data[idx],<sp/>index<sp/>+<sp/>idx);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a2e0d9dd75951297f7cc4e669cef73f60" kindref="member">BBP::std::write_r</ref>)(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae05c88ad8c36bd02dd1fd949e8b5cab2" kindref="member">mem_t</ref><sp/>&amp;data,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>index<sp/>is<sp/>within<sp/>bounds,<sp/>and<sp/>if<sp/>next<sp/>page<sp/>is<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>page-&gt;dataSize<sp/>&amp;&amp;<sp/>page-&gt;nextPage)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a2e0d9dd75951297f7cc4e669cef73f60" kindref="member">write_r</ref>)(page-&gt;nextPage,<sp/>data,<sp/>index<sp/>-<sp/>page-&gt;dataSize);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page-&gt;raw[index]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1aa63573041786d49b7cdb2eec8a921a6a" kindref="member">BBP::std::write</ref>(PAGE&lt;T&gt;<sp/>*page,<sp/>T<sp/>&amp;data,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>page<sp/>is<sp/>nullptr,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">BBP::std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>page<sp/>is<sp/>null&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>sequence<sp/>size<sp/>of<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>page_size<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">std::seqlen</ref>(*page);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>requested<sp/>index<sp/>is<sp/>too<sp/>large,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>page_size)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>index<sp/>exceeds<sp/>page<sp/>bounds.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a9e655f47bfd914a1174f281fc31cf63d" kindref="member">ENOBUFS</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>data.<sp/>We<sp/>can<sp/>use<sp/>unsafe,<sp/>since<sp/>we<sp/>already<sp/>validated<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="de/dfe/namespaceBBP_1_1userspace_1a61a881cf9970daa1511345a803c18049aeb09bbca61c392f16c3f078bcf0abcd9" kindref="member">write</ref>)(page,<sp/>data,<sp/>index);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a2e0d9dd75951297f7cc4e669cef73f60" kindref="member">BBP::std::write_r</ref>(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae05c88ad8c36bd02dd1fd949e8b5cab2" kindref="member">mem_t</ref><sp/>&amp;data,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>page<sp/>is<sp/>nullptr,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">BBP::std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>page<sp/>is<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>sequence<sp/>size<sp/>of<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>page_size<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ab6bc6f6ef6058398a8e0b6ec7543fb54" kindref="member">std::seqlen_r</ref>(page);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>requested<sp/>index<sp/>is<sp/>too<sp/>large,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>page_size)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>index<sp/>is<sp/>out<sp/>of<sp/>bounds.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a9e655f47bfd914a1174f281fc31cf63d" kindref="member">ENOBUFS</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>data.<sp/>We<sp/>can<sp/>use<sp/>unsafe,<sp/>since<sp/>we<sp/>already<sp/>validated<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a2e0d9dd75951297f7cc4e669cef73f60" kindref="member">write_r</ref>)(page,<sp/>data,<sp/>index);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a3562de634247bfcc9588d254036740ea" kindref="member">BBP::std::write_a</ref>(PAGE&lt;T&gt;<sp/>*page,<sp/>T<sp/>*data,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>amount)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>page<sp/>is<sp/>nullptr,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>page<sp/>is<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>data<sp/>is<sp/>invalid,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>attempt<sp/>to<sp/>write<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>sequence<sp/>size<sp/>of<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>page_size<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">std::seqlen</ref>(*page);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>amount<sp/>requested<sp/>is<sp/>too<sp/>large,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amount<sp/>+<sp/>index<sp/>&gt;<sp/>page_size)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>offset<sp/>index<sp/>is<sp/>out<sp/>of<sp/>bounds.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a9e655f47bfd914a1174f281fc31cf63d" kindref="member">ENOBUFS</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>data.<sp/>We<sp/>can<sp/>use<sp/>unsafe,<sp/>since<sp/>we<sp/>already<sp/>validated<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>amount;<sp/>idx++)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="de/dfe/namespaceBBP_1_1userspace_1a61a881cf9970daa1511345a803c18049aeb09bbca61c392f16c3f078bcf0abcd9" kindref="member">std::write</ref>)(page,<sp/>data[idx],<sp/>idx<sp/>+<sp/>index);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae076402880e631cbec39c0992950a8c7" kindref="member">BBP::std::write_ar</ref>(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae05c88ad8c36bd02dd1fd949e8b5cab2" kindref="member">mem_t</ref><sp/>*data,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>amount)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>page<sp/>is<sp/>nullptr,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>page<sp/>is<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>data<sp/>is<sp/>invalid,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>attempt<sp/>to<sp/>write<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>raw<sp/>sequence<sp/>size<sp/>of<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>page_size<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ab6bc6f6ef6058398a8e0b6ec7543fb54" kindref="member">std::seqlen_r</ref>(page);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>amount<sp/>requested<sp/>is<sp/>too<sp/>large,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amount<sp/>+<sp/>index<sp/>&gt;<sp/>page_size)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>page:<sp/>offset<sp/>index<sp/>is<sp/>out<sp/>of<sp/>bounds.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a9e655f47bfd914a1174f281fc31cf63d" kindref="member">ENOBUFS</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>data.<sp/>We<sp/>can<sp/>use<sp/>unsafe,<sp/>since<sp/>we<sp/>already<sp/>validated<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>amount;<sp/>idx++)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a2e0d9dd75951297f7cc4e669cef73f60" kindref="member">std::write_r</ref>)(page,<sp/>data[idx],<sp/>idx<sp/>+<sp/>index);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a1d232f50fc4e569e79449970f1b4bb9e" kindref="member">BBP::std::read</ref>)(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>index<sp/>is<sp/>within<sp/>bounds,<sp/>and<sp/>if<sp/>next<sp/>page<sp/>is<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>page-&gt;dataSize<sp/>&amp;&amp;<sp/>page-&gt;nextPage)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="de/dfe/namespaceBBP_1_1userspace_1a61a881cf9970daa1511345a803c18049a021cd4115ae18e6da8708aaf8dfbe942" kindref="member">read</ref>)(page-&gt;nextPage,<sp/>index<sp/>-<sp/>page-&gt;dataSize);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page-&gt;data[index];</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae05c88ad8c36bd02dd1fd949e8b5cab2" kindref="member">BBP::std::mem_t</ref><sp/>&amp;<ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a66f9280bf6b4b7d1dded6365f427fff4" kindref="member">BBP::std::read_r</ref>)(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>index<sp/>is<sp/>within<sp/>bounds,<sp/>and<sp/>if<sp/>next<sp/>page<sp/>is<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>page-&gt;dataSize<sp/>&amp;&amp;<sp/>page-&gt;nextPage)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a66f9280bf6b4b7d1dded6365f427fff4" kindref="member">read_r</ref>)(page-&gt;nextPage,<sp/>index<sp/>-<sp/>page-&gt;dataSize);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page-&gt;raw[index];</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a55693c4a04d73e619277c4eb973f2745" kindref="member">BBP::std::read_a</ref>)(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page-&gt;data<sp/>+<sp/>index;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae05c88ad8c36bd02dd1fd949e8b5cab2" kindref="member">BBP::std::mem_t</ref><sp/>*<ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1ab8c934d79ee954a6a8221d364ce872a8" kindref="member">BBP::std::read_ar</ref>)(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page-&gt;raw<sp/>+<sp/>index;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">T<sp/>&amp;<ref refid="dd/d98/namespaceBBP_1_1std_1a1d232f50fc4e569e79449970f1b4bb9e" kindref="member">BBP::std::read</ref>(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>source<sp/>is<sp/>invalid,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>from<sp/>page:<sp/>page<sp/>is<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pageSize<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">std::seqlen</ref>(*page);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>index<sp/>is<sp/>out<sp/>of<sp/>bounds,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>pageSize)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>from<sp/>page:<sp/>index<sp/>exceeds<sp/>page<sp/>bounds.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1aa1591a4f3a86360108de5b9ba34980ca" kindref="member">ERANGE</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>read<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="de/dfe/namespaceBBP_1_1userspace_1a61a881cf9970daa1511345a803c18049a021cd4115ae18e6da8708aaf8dfbe942" kindref="member">std::read</ref>)(page,<sp/>index);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="dd/d98/namespaceBBP_1_1std_1ae05c88ad8c36bd02dd1fd949e8b5cab2" kindref="member">BBP::std::mem_t</ref><sp/>&amp;<ref refid="dd/d98/namespaceBBP_1_1std_1a66f9280bf6b4b7d1dded6365f427fff4" kindref="member">BBP::std::read_r</ref>(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>source<sp/>is<sp/>invalid,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>from<sp/>page:<sp/>page<sp/>is<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pageSize<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ab6bc6f6ef6058398a8e0b6ec7543fb54" kindref="member">std::seqlen_r</ref>(*page);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>index<sp/>is<sp/>out<sp/>of<sp/>bounds,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>pageSize)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>from<sp/>page:<sp/>index<sp/>exceeds<sp/>page<sp/>bounds.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1aa1591a4f3a86360108de5b9ba34980ca" kindref="member">ERANGE</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>read<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a66f9280bf6b4b7d1dded6365f427fff4" kindref="member">std::read_r</ref>)(page,<sp/>index);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">T<sp/>*<ref refid="dd/d98/namespaceBBP_1_1std_1a55693c4a04d73e619277c4eb973f2745" kindref="member">BBP::std::read_a</ref>(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>source<sp/>is<sp/>invalid,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>from<sp/>page:<sp/>page<sp/>is<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pageSize<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">std::seqlen</ref>(*page);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>index<sp/>is<sp/>out<sp/>of<sp/>bounds,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>pageSize)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>from<sp/>page:<sp/>index<sp/>exceeds<sp/>page<sp/>bounds.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1aa1591a4f3a86360108de5b9ba34980ca" kindref="member">ERANGE</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>read<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a55693c4a04d73e619277c4eb973f2745" kindref="member">std::read_a</ref>)(page,<sp/>index);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="dd/d98/namespaceBBP_1_1std_1ae05c88ad8c36bd02dd1fd949e8b5cab2" kindref="member">BBP::std::mem_t</ref><sp/>*<ref refid="dd/d98/namespaceBBP_1_1std_1ab8c934d79ee954a6a8221d364ce872a8" kindref="member">BBP::std::read_ar</ref>(PAGE&lt;T&gt;<sp/>*page,<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">index_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>source<sp/>is<sp/>invalid,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>from<sp/>page:<sp/>page<sp/>is<sp/>null.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a2d1678d5a7cc8ce499643f3b8957def4" kindref="member">EINVAL</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pageSize<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ab6bc6f6ef6058398a8e0b6ec7543fb54" kindref="member">std::seqlen_r</ref>(*page);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>index<sp/>is<sp/>out<sp/>of<sp/>bounds,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>pageSize)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>from<sp/>page:<sp/>index<sp/>exceeds<sp/>page<sp/>bounds.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1aa1591a4f3a86360108de5b9ba34980ca" kindref="member">ERANGE</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>read<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1ab8c934d79ee954a6a8221d364ce872a8" kindref="member">std::read_ar</ref>)(page,<sp/>index);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><ref refid="dd/d98/namespaceBBP_1_1std_1abd480c5a3803a8d9621cfdc79b051a7c" kindref="member">BBP::std::size_t</ref><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">BBP::std::seqlen</ref>)(std::PAGE&lt;T&gt;<sp/>&amp;page)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>pointer<sp/>which<sp/>will<sp/>traverse<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>std::PAGE&lt;T&gt;<sp/>*ptr<sp/>=<sp/>page;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>back<sp/>of<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr-&gt;prevPage)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;prevPage;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>runningSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>runningSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runningSize<sp/>+=<sp/>ptr-&gt;dataSize;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;nextPage;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>runningSize;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><ref refid="dd/d98/namespaceBBP_1_1std_1abd480c5a3803a8d9621cfdc79b051a7c" kindref="member">BBP::std::size_t</ref><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="dd/d98/namespaceBBP_1_1std_1ab6bc6f6ef6058398a8e0b6ec7543fb54" kindref="member">BBP::std::seqlen_r</ref>)(std::PAGE&lt;T&gt;<sp/>&amp;page)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>pointer<sp/>which<sp/>will<sp/>traverse<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>std::PAGE&lt;T&gt;<sp/>*ptr<sp/>=<sp/>page;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>back<sp/>of<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr-&gt;prevPage)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;prevPage;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>runningSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>runningSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runningSize<sp/>+=<sp/>ptr-&gt;bytes;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;nextPage;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>runningSize;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><ref refid="df/ddc/structBBP_1_1std_1_1PAGE" kindref="compound">BBP::std::PAGE&lt;T&gt;</ref><sp/>&amp;<ref refid="dd/d98/namespaceBBP_1_1std_1a370f972c44b9f597cdda3e119899f60f" kindref="member">BBP::std::last</ref>(std::PAGE&lt;T&gt;<sp/>&amp;page)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>pointer<sp/>which<sp/>shall<sp/>traverse<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>std::PAGE&lt;T&gt;<sp/>*ptr<sp/>=<sp/>&amp;page;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>variable<sp/>that<sp/>will<sp/>prevent<sp/>infinite<sp/>loop<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">word</ref><sp/>tries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>going<sp/>until<sp/>last<sp/>page<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr-&gt;nextPage<sp/>&amp;&amp;<sp/>++tries<sp/>&lt;=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;nextPage;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tries<sp/>found<sp/>nothing,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tries<sp/>&gt;<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>calculate<sp/>page<sp/>sequence<sp/>length:<sp/>exhausted<sp/>tries<sp/>during<sp/>backwards<sp/>page<sp/>search.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a059ed0ab5dab96dfe00ffca40b35155f" kindref="member">ELNRNG</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>return<sp/>*ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="df/ddc/structBBP_1_1std_1_1PAGE" kindref="compound">BBP::std::PAGE&lt;T&gt;</ref><sp/>&amp;<ref refid="dd/d98/namespaceBBP_1_1std_1a3cd82d1dfa78c6a8ec6826b4f5331b70" kindref="member">BBP::std::first</ref>(std::PAGE&lt;T&gt;<sp/>&amp;page)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>pointer<sp/>which<sp/>shall<sp/>traverse<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>std::PAGE&lt;T&gt;<sp/>*ptr<sp/>=<sp/>&amp;page;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>variable<sp/>that<sp/>will<sp/>prevent<sp/>infinite<sp/>loop<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">word</ref><sp/>tries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>going<sp/>until<sp/>first<sp/>page<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr-&gt;prevPage<sp/>&amp;&amp;<sp/>++tries<sp/>&lt;=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;prevPage;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tries<sp/>found<sp/>nothing,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tries<sp/>&gt;<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>calculate<sp/>page<sp/>sequence<sp/>length:<sp/>exhausted<sp/>tries<sp/>during<sp/>backwards<sp/>page<sp/>search.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a059ed0ab5dab96dfe00ffca40b35155f" kindref="member">ELNRNG</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>return<sp/>*ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="dd/d98/namespaceBBP_1_1std_1abd480c5a3803a8d9621cfdc79b051a7c" kindref="member">BBP::std::size_t</ref><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">BBP::std::seqlen</ref>(std::PAGE&lt;T&gt;<sp/>&amp;page)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>pointer<sp/>which<sp/>shall<sp/>traverse<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>std::PAGE&lt;T&gt;<sp/>*ptr<sp/>=<sp/>&amp;page;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>variable<sp/>that<sp/>will<sp/>prevent<sp/>infinite<sp/>loop<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">word</ref><sp/>tries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>going<sp/>until<sp/>first<sp/>page<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr-&gt;prevPage<sp/>&amp;&amp;<sp/>++tries<sp/>&lt;=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;prevPage;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tries<sp/>found<sp/>nothing,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tries<sp/>&gt;<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>calculate<sp/>page<sp/>sequence<sp/>length:<sp/>exhausted<sp/>tries<sp/>during<sp/>backwards<sp/>page<sp/>search.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a059ed0ab5dab96dfe00ffca40b35155f" kindref="member">ELNRNG</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>size<sp/>variable,<sp/>and<sp/>reset<sp/>tries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>runningSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>tries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>going<sp/>until<sp/>last<sp/>page<sp/>or<sp/>tries<sp/>exhausted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>&amp;&amp;<sp/>++tries<sp/>&lt;=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runningSize<sp/>+=<sp/>ptr-&gt;dataSize;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;nextPage;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tries<sp/>exhausted,<sp/>the<sp/>user<sp/>cannot<sp/>trust<sp/>the<sp/>outcome.<sp/>Throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tries<sp/>&gt;<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>calculate<sp/>page<sp/>sequence<sp/>length:<sp/>exhausted<sp/>tries<sp/>during<sp/>forward<sp/>page<sp/>search.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a059ed0ab5dab96dfe00ffca40b35155f" kindref="member">ELNRNG</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Everything<sp/>ok,<sp/>just<sp/>return<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>runningSize;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><ref refid="dd/d98/namespaceBBP_1_1std_1abd480c5a3803a8d9621cfdc79b051a7c" kindref="member">BBP::std::size_t</ref><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ab6bc6f6ef6058398a8e0b6ec7543fb54" kindref="member">BBP::std::seqlen_r</ref>(std::PAGE&lt;T&gt;<sp/>&amp;page)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>pointer<sp/>which<sp/>shall<sp/>traverse<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>std::PAGE&lt;T&gt;<sp/>*ptr<sp/>=<sp/>&amp;page;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>variable<sp/>that<sp/>will<sp/>prevent<sp/>infinite<sp/>loop<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">word</ref><sp/>tries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>going<sp/>until<sp/>first<sp/>page<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr-&gt;prevPage<sp/>&amp;&amp;++tries<sp/>&lt;=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;prevPage;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tries<sp/>found<sp/>nothing,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tries<sp/>&gt;<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>calculate<sp/>page<sp/>sequence<sp/>length:<sp/>exhausted<sp/>tries<sp/>during<sp/>backwards<sp/>page<sp/>search.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a059ed0ab5dab96dfe00ffca40b35155f" kindref="member">ELNRNG</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>size<sp/>variable,<sp/>and<sp/>reset<sp/>tries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>runningSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>tries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>going<sp/>until<sp/>last<sp/>page<sp/>or<sp/>tries<sp/>exhausted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>&amp;&amp;++tries<sp/>&lt;=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runningSize<sp/>+=<sp/>ptr-&gt;bytes;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr-&gt;nextPage;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tries<sp/>exhausted,<sp/>the<sp/>user<sp/>cannot<sp/>trust<sp/>the<sp/>outcome.<sp/>Throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tries<sp/>&gt;<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a88153a92afd9022ff65ac450e1aa56be" kindref="member">BBP::std::max_page_sequence_length</ref>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>calculate<sp/>page<sp/>sequence<sp/>length:<sp/>exhausted<sp/>tries<sp/>during<sp/>forwards<sp/>page<sp/>search.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a059ed0ab5dab96dfe00ffca40b35155f" kindref="member">ELNRNG</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Everything<sp/>ok,<sp/>just<sp/>return<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>runningSize;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a997d77887946462f3e071f11465abfae" kindref="member">BBP::std::memcpy</ref>(PAGE&lt;T&gt;<sp/>&amp;src,<sp/>PAGE&lt;T&gt;<sp/>&amp;dst,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>amount)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>source<sp/>and<sp/>destination<sp/>lengths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>srcLen<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">std::seqlen</ref>(src);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dstLen<sp/>=<sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a3f8c5c3d25a021fbc386bafabc41a719" kindref="member">std::seqlen</ref>(dst);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>copying<sp/>too<sp/>much<sp/>data<sp/>from<sp/>src,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amount<sp/>&gt;<sp/>srcLen)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>copy<sp/>memory:<sp/>amount<sp/>requested<sp/>is<sp/>bigger<sp/>than<sp/>the<sp/>size<sp/>of<sp/>source.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a9e655f47bfd914a1174f281fc31cf63d" kindref="member">ENOBUFS</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>destination<sp/>is<sp/>smaller<sp/>than<sp/>requested<sp/>amount,<sp/>throw<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amount<sp/>&gt;<sp/>dstLen)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="dd/d98/namespaceBBP_1_1std_1a750ba4c285e0788e84722a30a776b913" kindref="member">std::exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>copy<sp/>memory:<sp/>amount<sp/>requested<sp/>is<sp/>bigger<sp/>than<sp/>the<sp/>size<sp/>of<sp/>destination.&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/dc2/errno_8h_1a9e655f47bfd914a1174f281fc31cf63d" kindref="member">ENOBUFS</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Directly<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d98/namespaceBBP_1_1std_1a4e12dc72cb7f796de80bc851c86c658e" kindref="member">std::index_t</ref><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>amount;<sp/>index++)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="de/dfe/namespaceBBP_1_1userspace_1a61a881cf9970daa1511345a803c18049aeb09bbca61c392f16c3f078bcf0abcd9" kindref="member">write</ref>)(&amp;dst,<sp/><ref refid="d3/dce/stddef_8h_1abe45653ace4e77c9ae4612de5535ff1d" kindref="member">__UNSAFE__</ref>(<ref refid="de/dfe/namespaceBBP_1_1userspace_1a61a881cf9970daa1511345a803c18049a021cd4115ae18e6da8708aaf8dfbe942" kindref="member">read</ref>)(&amp;src,<sp/>index),<sp/>index);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/Memory.hxx"/>
  </compounddef>
</doxygen>
