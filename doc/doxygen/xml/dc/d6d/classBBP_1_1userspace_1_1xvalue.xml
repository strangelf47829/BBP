<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="dc/d6d/classBBP_1_1userspace_1_1xvalue" kind="class" language="C++" prot="public">
    <compoundname>BBP::userspace::xvalue</compoundname>
    <basecompoundref refid="d8/d04/classBBP_1_1userspace_1_1lvalue" prot="private" virt="non-virtual">BBP::userspace::lvalue</basecompoundref>
    <basecompoundref refid="d1/da1/classBBP_1_1userspace_1_1rvalue" prot="private" virt="non-virtual">BBP::userspace::rvalue</basecompoundref>
    <includes refid="d8/da7/ValueCategories_8h" local="no">ValueCategories.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a3e3d516aa10fcb79e02eefd52a681a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBP::userspace::xvalue::xvalue</definition>
        <argsstring>()</argsstring>
        <name>xvalue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="68" column="1" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/xvalue.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a012a28cd16b65680600c31ddf2e47951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BBP::userspace::xvalue::xvalue</definition>
        <argsstring>(userspace::StateMachine &amp;state, userspace::Instruction::Arg &amp;)</argsstring>
        <name>xvalue</name>
        <param>
          <type><ref refid="d0/d71/classBBP_1_1userspace_1_1StateMachine" kindref="compound">userspace::StateMachine</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg" kindref="compound">userspace::Instruction::Arg</ref> &amp;</type>
          <defname>arg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="69" column="1" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/xvalue.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a07cbbdfeddb7d414dbe5987a55bbf83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BBP::userspace::xvalue::dereference</definition>
        <argsstring>(userspace::StateMachine &amp;state, std::address_t)</argsstring>
        <name>dereference</name>
        <reimplements refid="d1/da1/classBBP_1_1userspace_1_1rvalue_1a369fbfacc243cf5c91f253b6e961765b">dereference</reimplements>
        <param>
          <type><ref refid="d0/d71/classBBP_1_1userspace_1_1StateMachine" kindref="compound">userspace::StateMachine</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="dd/d98/namespaceBBP_1_1std_1a03632bff3fd98378d63d18e829a72de1" kindref="member">std::address_t</ref></type>
          <defname>lvalueFor</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="72" column="6" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/xvalue.cpp" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="dc/d6d/classBBP_1_1userspace_1_1xvalue_1ad7fd8cc3e8842ec7a764486f9d2afcf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BBP::userspace::xvalue::reference</definition>
        <argsstring>(userspace::StateMachine &amp;state, pvalue &amp;)</argsstring>
        <name>reference</name>
        <param>
          <type><ref refid="d0/d71/classBBP_1_1userspace_1_1StateMachine" kindref="compound">userspace::StateMachine</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="d4/d87/classBBP_1_1userspace_1_1pvalue" kindref="compound">pvalue</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="73" column="6" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/xvalue.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a684b5ded4d4fc02eb6bf8e44fa380550" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/d98/namespaceBBP_1_1std_1ae104641b17c021a901add93f7bc5d808" kindref="member">std::word</ref></type>
        <definition>BBP::std::word BBP::userspace::xvalue::resolve</definition>
        <argsstring>(userspace::StateMachine &amp;state)</argsstring>
        <name>resolve</name>
        <reimplements refid="d1/da1/classBBP_1_1userspace_1_1rvalue_1a23fefd203bb4a17be52d0b4c51672b8c">resolve</reimplements>
        <param>
          <type><ref refid="d0/d71/classBBP_1_1userspace_1_1StateMachine" kindref="compound">userspace::StateMachine</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="76" column="11" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/RAE/xvalue.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BBP::userspace::xvalue</label>
        <link refid="dc/d6d/classBBP_1_1userspace_1_1xvalue"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
        <childnode refid="4" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BBP::userspace::lvalue</label>
        <link refid="d8/d04/classBBP_1_1userspace_1_1lvalue"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BBP::userspace::pvalue</label>
        <link refid="d4/d87/classBBP_1_1userspace_1_1pvalue"/>
      </node>
      <node id="4">
        <label>BBP::userspace::rvalue</label>
        <link refid="d1/da1/classBBP_1_1userspace_1_1rvalue"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>BBP::userspace::Thread</label>
        <link refid="d5/d8b/structBBP_1_1userspace_1_1Thread"/>
        <childnode refid="9" relation="usage">
          <edgelabel>+argumentPage</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>+registerData</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>+instruction</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+generalStackSize</edgelabel>
          <edgelabel>+argumentStackSize</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>+generalStack</edgelabel>
          <edgelabel>+argumentStack</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>+TLS</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+active</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>+allocator</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>+executable</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+dl</edgelabel>
          <edgelabel>+cl</edgelabel>
          <edgelabel>+six</edgelabel>
          <edgelabel>+bl</edgelabel>
          <edgelabel>+tix</edgelabel>
          <edgelabel>+sih</edgelabel>
          <edgelabel>+al</edgelabel>
          <edgelabel>+ht</edgelabel>
          <edgelabel>+dix</edgelabel>
          <edgelabel>+tp</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>+generalPage</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>+registerCount</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>size_t</label>
      </node>
      <node id="20">
        <label>byte *</label>
      </node>
      <node id="37">
        <label>void * *</label>
      </node>
      <node id="43">
        <label>BBP::std::STATIC_PAGE&lt; BBP::userspace::MemoryRegion, 8 &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; BBP::userspace::MemoryRegion, 8 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>T</label>
      </node>
      <node id="38">
        <label>void *</label>
      </node>
      <node id="18">
        <label>BBP::std::STATIC_PAGE&lt; std::byte, registerCount *4 &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; std::byte, registerCount *4 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>BBP::std::ResourceManager</label>
        <link refid="d6/d73/classBBP_1_1std_1_1ResourceManager"/>
        <childnode refid="35" relation="usage">
          <edgelabel>-allocations</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>-invalidAllocationIndex</edgelabel>
          <edgelabel>-invalidObjectIndex</edgelabel>
          <edgelabel>-nextObjectAvailable</edgelabel>
          <edgelabel>-nextAllocationAvailable</edgelabel>
          <edgelabel>+totalAllocations</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>-objects</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>word</label>
      </node>
      <node id="13">
        <label>mem_t *</label>
      </node>
      <node id="30">
        <label>BBP::std::PAGE&lt; K &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="31" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; K &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>PAGE&lt; T &gt; *</label>
      </node>
      <node id="46">
        <label>BBP::std::STATIC_PAGE&lt; std::word, generalStackSize &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; std::word, generalStackSize &gt;</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>BBP::userspace::Instruction</label>
        <link refid="d0/dfc/structBBP_1_1userspace_1_1Instruction"/>
        <childnode refid="23" relation="usage">
          <edgelabel>+args</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>+header</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>BBP::std::PAGE&lt; BBP::userspace::MemoryRegion &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; BBP::userspace::MemoryRegion &gt;</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>BBP::userspace::Instruction::Head</label>
        <link refid="d5/d1c/structBBP_1_1userspace_1_1Instruction_1_1Head"/>
        <childnode refid="24" relation="usage">
          <edgelabel>+args</edgelabel>
          <edgelabel>+flags</edgelabel>
          <edgelabel>+suffix</edgelabel>
          <edgelabel>+opcode</edgelabel>
          <edgelabel>+prefix</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>BBP::std::PAGE&lt; std::string_element &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; std::string_element &gt;</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>BBP::std::PAGE&lt; std::byte &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; std::byte &gt;</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>BBP::std::AbstractGCEntry</label>
        <link refid="d7/def/structBBP_1_1std_1_1AbstractGCEntry"/>
      </node>
      <node id="11">
        <label>anonymous:+@1</label>
      </node>
      <node id="25">
        <label>unsigned int</label>
      </node>
      <node id="17">
        <label>BBP::std::STATIC_PAGE&lt; T, K &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>byte</label>
      </node>
      <node id="45">
        <label>BBP::userspace::MemoryRegion</label>
        <link refid="d3/de6/structBBP_1_1userspace_1_1MemoryRegion"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+writeable</edgelabel>
          <edgelabel>+allocated</edgelabel>
          <edgelabel>+executable</edgelabel>
          <edgelabel>+readable</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+virtualMemoryHead</edgelabel>
          <edgelabel>+size</edgelabel>
          <edgelabel>+physicalMemoryHead</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>BBP::std::STATIC_PAGE&lt; std::word, argumentStackSize &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; std::word, argumentStackSize &gt;</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>string_element *</label>
      </node>
      <node id="35">
        <label>BBP::std::STATIC_PAGE&lt; void *, max_allocations &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; void *, max_allocations &gt;</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>uint8_t</label>
      </node>
      <node id="31">
        <label>K *</label>
      </node>
      <node id="6">
        <label>registerSize</label>
      </node>
      <node id="40">
        <label>BBP::std::PAGE&lt; BBP::std::AbstractGCEntry * &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; BBP::std::AbstractGCEntry * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BBP::userspace::xvalue</label>
        <link refid="dc/d6d/classBBP_1_1userspace_1_1xvalue"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
        <childnode refid="48" relation="private-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>BBP::std::Stack&lt; K &gt;</label>
        <link refid="de/d21/classBBP_1_1std_1_1Stack"/>
        <childnode refid="28" relation="usage">
          <edgelabel>+readFrom</edgelabel>
          <edgelabel>+writeTo</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+atElement</edgelabel>
          <edgelabel>+max_elements</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>+page</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>BBP::userspace::Instruction::Arg</label>
        <link refid="d5/d9e/structBBP_1_1userspace_1_1Instruction_1_1Arg"/>
        <childnode refid="24" relation="usage">
          <edgelabel>+trailerCount</edgelabel>
          <edgelabel>+offset</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+anyvalue</edgelabel>
          <edgelabel>+dereferenced</edgelabel>
          <edgelabel>+referenced</edgelabel>
          <edgelabel>+isLiteralArg</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>+data</edgelabel>
          <edgelabel>+trailers</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BBP::userspace::lvalue</label>
        <link refid="d8/d04/classBBP_1_1userspace_1_1lvalue"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#isAddress</edgelabel>
          <edgelabel>#isRegister</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#_register</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>#VirtualMemory</edgelabel>
          <edgelabel>#PhysicalAddress</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BBP::userspace::register_t</label>
        <link refid="d8/da2/structBBP_1_1userspace_1_1register__t"/>
        <childnode refid="6" relation="usage">
          <edgelabel>+size</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+index</edgelabel>
          <edgelabel>+offset</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+owner</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>BBP::std::Stack&lt; std::word &gt;</label>
        <link refid="de/d21/classBBP_1_1std_1_1Stack"/>
        <childnode refid="10" relation="usage">
          <edgelabel>+page</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>+readFrom</edgelabel>
          <edgelabel>+writeTo</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+atElement</edgelabel>
          <edgelabel>+max_elements</edgelabel>
        </childnode>
        <childnode refid="29" relation="template-instance">
          <edgelabel>&lt; std::word &gt;</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>BBP::userspace::BinaryExecutable</label>
        <link refid="d0/dc2/classBBP_1_1userspace_1_1BinaryExecutable"/>
        <childnode refid="32" relation="usage">
          <edgelabel>+BinaryData</edgelabel>
          <edgelabel>-TLSData</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>-allocated</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>-allocator</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>+mapping</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+totalSize</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>word *</label>
      </node>
      <node id="4">
        <label>bool</label>
      </node>
      <node id="3">
        <label>BBP::userspace::pvalue</label>
        <link refid="d4/d87/classBBP_1_1userspace_1_1pvalue"/>
      </node>
      <node id="36">
        <label>BBP::std::PAGE&lt; void * &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="37" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; void * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>void(*)(Stack&lt; K &gt; *)</label>
      </node>
      <node id="14">
        <label>BBP::std::PAGE&lt; T &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>BBP::std::STATIC_PAGE&lt; BBP::std::AbstractGCEntry *, max_objects &gt;</label>
        <link refid="d4/dea/structBBP_1_1std_1_1STATIC__PAGE"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>+static_data</edgelabel>
        </childnode>
        <childnode refid="17" relation="template-instance">
          <edgelabel>&lt; BBP::std::AbstractGCEntry *, max_objects &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>BBP::std::PAGE&lt; std::word &gt;</label>
        <link refid="df/ddc/structBBP_1_1std_1_1PAGE"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+@1</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+nextPage</edgelabel>
          <edgelabel>+prevPage</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+dataSize</edgelabel>
          <edgelabel>+bytes</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+raw</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; std::word &gt;</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>BBP::userspace::rvalue</label>
        <link refid="d1/da1/classBBP_1_1userspace_1_1rvalue"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#hiho</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" line="66" column="1" bodyfile="/mnt/c/Users/stran/Documents/23IN01/Design/Software/BBP/Source/include/ValueCategories.h" bodystart="65" bodyend="78"/>
    <listofallmembers>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1ace29071288d57ed260e3c4def955b639" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>_register</name></member>
      <member refid="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a07cbbdfeddb7d414dbe5987a55bbf83f" prot="public" virt="virtual"><scope>BBP::userspace::xvalue</scope><name>dereference</name></member>
      <member refid="d1/da1/classBBP_1_1userspace_1_1rvalue_1a3e0a04a8492f1119a633a0f06863cea8" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>hiho</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1af0d58a58e337a8860b7be9f1606e1bfe" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>isAddress</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a4f608b6c9d67370868b513d0a613e369" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>isRegister</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a298d2412e3fb2a9f20db16f5007b1237" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>lvalue</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1abc09790e147b6868c34917efd0478372" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>lvalue</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a2b34d6fbb5e7e920adb8cefab86724fc" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>PhysicalAddress</name></member>
      <member refid="dc/d6d/classBBP_1_1userspace_1_1xvalue_1ad7fd8cc3e8842ec7a764486f9d2afcf3" prot="public" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>reference</name></member>
      <member refid="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a684b5ded4d4fc02eb6bf8e44fa380550" prot="public" virt="virtual"><scope>BBP::userspace::xvalue</scope><name>resolve</name></member>
      <member refid="d1/da1/classBBP_1_1userspace_1_1rvalue_1a4c3e343c68fa8babb020b4b7a7b2f561" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>rvalue</name></member>
      <member refid="d1/da1/classBBP_1_1userspace_1_1rvalue_1a21dbd2a11af7fe2f9d3032c7a39b6881" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>rvalue</name></member>
      <member refid="d8/d04/classBBP_1_1userspace_1_1lvalue_1a004b8d67fe4057480dbf9a483d9d9f17" prot="private" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>VirtualMemory</name></member>
      <member refid="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a3e3d516aa10fcb79e02eefd52a681a79" prot="public" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>xvalue</name></member>
      <member refid="dc/d6d/classBBP_1_1userspace_1_1xvalue_1a012a28cd16b65680600c31ddf2e47951" prot="public" virt="non-virtual"><scope>BBP::userspace::xvalue</scope><name>xvalue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
