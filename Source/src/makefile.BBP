# Makefile to build and install the TS Kernel

# == CHANGE THE SETTINGS BELOW TO SUIT THE ENVIRONMENT ==

PLAT= x86

# Where to install
INSTALL_TOP= ..
INSTALL_BIN= $(INSTALL_TOP)/Build/bin
INSTALL_INC= $(INSTALL_TOP)/Build/include
INSTALL_LIB= $(INSTALL_TOP)/Build/lib

VPATH=src


CC= gcc
CXX= g++

CFLAGS= $(SYSCFLAGS) $(MYCFLAGS)
CXXFLAGS= $(SYSCXFLAGS) $(MYCXFLAGS)

LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)
LIBS= $(SYSLIBS) $(MYLIBS)

AR= ar rcu
RANLIB= ranlib

SYSCFLAGS=-c
SYSCXFLAGS=-c
SYSLDFLAGS=
SYSLIBS=

MYCFLAGS= -Iinclude/
MYCXFLAGS= -Iinclude/
MYLDFLAGS=
MYLIBS=

# == END OF USER SETTINGS ==

PLATS= x86 micro stdgnu

KERNEL_A= libBBP.a
KERNEL_O= kernel.o

CORE_O= application.o Interrupts.o
LIB_O= ROM.o R2D.o LuaLibraries.o Debug.o
BASE_O= $(CORE_O) $(LIB_O)

KERNEL_T= libBBPKernel.a

ALL_O= $(BASE_O) $(KERNEL_O)
ALL_T= $(KERNEL_A) $(KERNEL_T)
ALL_A= $(KERNEL_A)
ALL_H= include/Kernel.h include/lua.h include/lapi.h include/lauxlib.h


# Targets start here
ALL= all

default: $(PLAT)

all: $(ALL_T)

o: $(ALL_O)

a: $(ALL_A)

$(KERNEL_A): $(BASE_O)
	$(AR) $@ $(BASE_O)

$(KERNEL_T): $(KERNEL_O) $(KERNEL_A)
	#$(CXX) -c -o $(INSTALL_BIN)/$@ $(LDFLAGS) $(ALL_O) $(LIBS)
	$(AR) $@ $(ALL_O)
	cp $(KERNEL_A) $(INSTALL_BIN)/$(KERNEL_A)
	cp $(KERNEL_T) $(INSTALL_BIN)/$(KERNEL_T)
	cp -r Lib/* $(INSTALL_LIB)
	cp $(ALL_H) $(INSTALL_INC)

clean:
	rm -rf $(ALL_T) $(wildcard *.o)
clean_all:
	rm -rf $(ALL_T) $(ALL_O) $(INSTALL_BIN)/* $(INSTALL_LIB)/* $(INSTALL_INC)/*

generic: all

x86:
	$(MAKE) $(ALL) CC="x86_64-w64-mingw32-gcc" CXX="x86_64-w64-mingw32-g++"

x86Debug:
	$(MAKE) $(ALL) CC="x86_64-w64-mingw32-gcc" CXX="x86_64-w64-mingw32-g++" SYSCXFLAGS="-c -DBBP_DEBUG"

nostdlib:
	$(MAKE) $(ALL) SYSCFLAGS="-nostdlib" SYSCXFLAGS="-nostdlib"

freestanding:
	$(MAKE) $(ALL) SYSCFLAGS="-nostdlib -ffreestanding" SYSCXFLAGS="-nostdlib -ffreestanding"

micro:
	$(MAKE) $(ALL) SYSCFLAGS="-nostdlib -ffreestanding -DSTM_32" SYSCXFLAGS="-nostdlib -ffreestanding -DSTM_32" CC="arm-none-eabi-gcc" CXX="arm-none-eabi-g++"




# Make rules
application.o: application.cpp
R2D.o: R2D.cpp
ROM.o: ROM.cpp
serices.o: services.cpp
Interrupts.o: Interrupts.cpp
kernel.o: kernel.cpp
LuaLibraries.o: LuaLibraries.cpp
Debug.o: Debug.cpp
